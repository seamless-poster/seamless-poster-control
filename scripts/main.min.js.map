{"version":3,"sources":["main.min.js","/source/main.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/app/scripts/app/state.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/app/scripts/fake_b3d4d4f8.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/buffer/index.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/process/browser.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/ieee754/index.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/browser-pack/_prelude.js"],"names":["_classCallCheck","instance","Constructor","TypeError","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","t","n","r","s","o","u","a","require","f","exports","call","1","module","process","global","Buffer","__argument0","__argument1","__argument2","__argument3","__filename","__dirname","StateManager","element","this","classList","add","value","remove","document","getElementById","stateManager","self","arguments","b55mWE","buffer","2","connectButton","disconnectButton","addEventListener","disabled","change","setTimeout","./app/state.js","3","lookup","decode","elt","code","charCodeAt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","push","v","arr","L","j","l","tmp","placeHolders","len","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","Uint8Array","Array","toByteArray","fromByteArray","base64js","4","subject","encoding","noZero","type","stringtrim","coerce","byteLength","buf","_useTypedArrays","_augment","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","_hexWrite","string","offset","Number","remaining","strLen","assert","byte","parseInt","substr","isNaN","_charsWritten","_utf8Write","charsWritten","blitBuffer","utf8ToBytes","_asciiWrite","asciiToBytes","_binaryWrite","_base64Write","base64ToBytes","_utf16leWrite","utf16leToBytes","_base64Slice","start","end","base64","slice","_utf8Slice","res","Math","min","decodeUtf8Char","String","fromCharCode","toString","_asciiSlice","ret","_binarySlice","_hexSlice","out","toHex","_utf16leSlice","bytes","_readUInt16","littleEndian","noAssert","undefined","val","_readUInt32","_readInt16","neg","_readInt32","_readFloat","ieee754","read","_readDouble","_writeUInt16","verifuint","_writeUInt32","_writeInt16","verifsint","_writeInt32","_writeFloat","verifIEEE754","_writeDouble","str","trim","replace","clamp","index","defaultValue","ceil","isArray","byteArray","b","h","encodeURIComponent","split","c","hi","lo","src","dst","decodeURIComponent","err","max","floor","test","message","SlowBuffer","INSPECT_MAX_BYTES","poolSize","ArrayBuffer","foo","subarray","isEncoding","toLowerCase","concat","list","totalLength","pos","item","copy","isFinite","swap","toJSON","data","_arr","target_start","source","sliceLen","newBuf","get","log","set","writeUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","fill","inspect","join","toArrayBuffer","BP","_get","toLocaleString","base64-js","5","noop","nextTick","canSetImmediate","setImmediate","canPost","postMessage","queue","ev","stopPropagation","fn","shift","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","6","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","rt","abs","LN2"],"mappings":"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R,GLoQgBjF,GKnQhB,QLoQU,IKnQV,MLoQYoD,EAAM6B,EAAIjL,OKnQtB,CACA,MLoQU,KKnQV,OLoQU,IKnQV,QLoQYoJ,EAAMtB,EAAYmD,GKnQ9BjL,MACA,MLoQU,KKnQV,QLoQU,IKnQV,SLoQU,IKnQV,MLoQYoJ,EAAM6B,EKnQlBjL,MACA,MLoQU,KKnQV,SLoQYoJ,EAAMjB,EAAc8C,GKnQhCjL,MACA,MLoQU,KKnQV,OLoQU,IKnQV,QLoQU,IKnQV,ULoQU,IKnQV,WLoQYoJ,EKnQZ,ELmQkB6B,EAAIjL,MKlQtB,MACA,SLoQY,KAAM,IAAId,OKnQtB,oBLqQQ,MKnQRkK,IAEA1H,EAAAuL,OAAA,SAAAC,EAAAC,GLwQQ,GAHA9F,EAAOmE,EAAQ0B,GKnQvB,uELsQ4B,IAAhBA,EAAKlN,OACP,MAAO,IAAI0B,GKnQrB,ELoQe,IAAoB,IAAhBwL,EAAKlN,OACd,MAAOkN,GKnQjB,ELsQQ,IKnQRnN,ELoQQ,IAA2B,gBAAhBoN,GAET,IADAA,EKnQV,ELoQepN,EAAI,EAAGA,EAAImN,EAAKlN,OAAQD,IAC3BoN,GAAeD,EAAKnN,GKnQhCC,MLuQQ,IAAIsG,GAAM,GAAI5E,GKnQtByL,GLoQYC,EKnQZ,CLoQQ,KAAKrN,EAAI,EAAGA,EAAImN,EAAKlN,OAAQD,IKnQrC,CLoQU,GAAIsN,GAAOH,EKnQrBnN,ELoQUsN,GAAKC,KAAKhH,EKnQpB8G,GLoQUA,GAAOC,EKnQjBrN,OLqQQ,MKnQRsG,IA6DA5E,EAAAhB,UAAAoG,MAAA,SAAAE,EAAAC,EAAAjH,EAAAgG,GLuQQ,GAAIuH,SAAStG,GACNsG,SAASvN,KACZgG,EKnQZhG,ELoQYA,EKnQZ8J,YLqQe,CACL,GAAI0D,GKnQdxH,CLoQUA,GKnQViB,ELoQUA,EKnQVjH,ELoQUA,EKnQVwN,ELsQQvG,EAASC,OAAOD,IKnQxB,CLoQQ,IAAIE,GAAYhF,KAAKnC,OKnQ7BiH,CLoQajH,IAGHA,EAASkH,OKnQnBlH,GLoQcA,EAASmH,IACXnH,EKnQZmH,IL+PUnH,EKnQVmH,EL0QQnB,EAAWgD,OAAOhD,GAAY,QKnQtCgH,aLqQQ,IKnQR5D,ELoQQ,QKnQRpD,GLoQU,IKnQV,MLoQYoD,EAAMrC,EAAU5E,KAAM6E,EAAQC,EKnQ1CjH,EACA,MLoQU,KKnQV,OLoQU,IKnQV,QLoQYoJ,EAAMzB,EAAWxF,KAAM6E,EAAQC,EKnQ3CjH,EACA,MLoQU,KKnQV,QLoQYoJ,EAAMrB,EAAY5F,KAAM6E,EAAQC,EKnQ5CjH,EACA,MLoQU,KKnQV,SLoQYoJ,EAAMnB,EAAa9F,KAAM6E,EAAQC,EKnQ7CjH,EACA,MLoQU,KKnQV,SLoQYoJ,EAAMlB,EAAa/F,KAAM6E,EAAQC,EKnQ7CjH,EACA,MLoQU,KKnQV,OLoQU,IKnQV,QLoQU,IKnQV,ULoQU,IKnQV,WLoQYoJ,EAAMhB,EAAcjG,KAAM6E,EAAQC,EKnQ9CjH,EACA,MACA,SLoQY,KAAM,IAAId,OKnQtB,oBLqQQ,MKnQRkK,IAEA1H,EAAAhB,UAAAwI,SAAA,SAAAlD,EAAAuC,EAAAC,GLqQQ,GAAI7F,GKnQZR,IL4QQ,IAPA6D,EAAWgD,OAAOhD,GAAY,QKnQtCgH,cLoQQzE,EAAQrB,OAAOqB,IKnQvB,ELoQQC,EKnQRsB,SLmQctB,EACNtB,OKnQRsB,GLoQQA,EAAM7F,EKnQd3C,OLsQYwI,IKnQZD,ELoQQ,MKnQR,ELqQQ,IKnQRa,ELoQQ,QKnQRpD,GLoQU,IKnQV,MLoQYoD,EAAME,EAAU3G,EAAM4F,EKnQlCC,EACA,MLoQU,KKnQV,OLoQU,IKnQV,QLoQYY,EAAMT,EAAWhG,EAAM4F,EKnQnCC,EACA,MLoQU,KKnQV,QLoQYY,EAAMD,EAAYxG,EAAM4F,EKnQpCC,EACA,MLoQU,KKnQV,SLoQYY,EAAMC,EAAa1G,EAAM4F,EKnQrCC,EACA,MLoQU,KKnQV,SLoQYY,EAAMd,EAAa3F,EAAM4F,EKnQrCC,EACA,MLoQU,KKnQV,OLoQU,IKnQV,QLoQU,IKnQV,ULoQU,IKnQV,WLoQYY,EAAMK,EAAc9G,EAAM4F,EKnQtCC,EACA,MACA,SLoQY,KAAM,IAAItJ,OKnQtB,oBLqQQ,MKnQRkK,IAEA1H,EAAAhB,UAAA+M,OAAA,WLqQQ,OACEvH,KKnQV,SLoQUwH,KAAMhI,MA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","file":"main.min.js","sourcesContent":["'use strict'; /*!\n               *\n               *  Web Starter Kit\n               *  Copyright 2015 Google Inc. All rights reserved.\n               *\n               *  Licensed under the Apache License, Version 2.0 (the \"License\");\n               *  you may not use this file except in compliance with the License.\n               *  You may obtain a copy of the License at\n               *\n               *    https://www.apache.org/licenses/LICENSE-2.0\n               *\n               *  Unless required by applicable law or agreed to in writing, software\n               *  distributed under the License is distributed on an \"AS IS\" BASIS,\n               *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n               *  See the License for the specific language governing permissions and\n               *  limitations under the License\n               *\n               */\n/* eslint-env browser */\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n\n\n  if ('serviceWorker' in navigator && (\n  window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js').\n    then(function (registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function () {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function () {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                'service worker became redundant.');\n\n              default:\n              // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function (e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiaXNMb2NhbGhvc3QiLCJCb29sZWFuIiwid2luZG93IiwibG9jYXRpb24iLCJob3N0bmFtZSIsIm1hdGNoIiwibmF2aWdhdG9yIiwicHJvdG9jb2wiLCJzZXJ2aWNlV29ya2VyIiwicmVnaXN0ZXIiLCJ0aGVuIiwicmVnaXN0cmF0aW9uIiwib251cGRhdGVmb3VuZCIsImNvbnRyb2xsZXIiLCJpbnN0YWxsaW5nV29ya2VyIiwiaW5zdGFsbGluZyIsIm9uc3RhdGVjaGFuZ2UiLCJzdGF0ZSIsIkVycm9yIiwiY2F0Y2giLCJlIiwiY29uc29sZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiY0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0EsQ0FBQyxZQUFXO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFJQSxjQUFjQyxRQUFRQyxPQUFPQyxRQUFQLENBQWdCQyxRQUFoQixLQUE2QixXQUE3QjtBQUN0QjtBQUNBRixTQUFPQyxRQUFQLENBQWdCQyxRQUFoQixLQUE2QixPQUZQO0FBR3RCO0FBQ0FGLFNBQU9DLFFBQVAsQ0FBZ0JDLFFBQWhCLENBQXlCQyxLQUF6QjtBQUNFLDBEQURGLENBSmMsQ0FBbEI7Ozs7QUFTQSxNQUFJLG1CQUFtQkMsU0FBbkI7QUFDQ0osU0FBT0MsUUFBUCxDQUFnQkksUUFBaEIsS0FBNkIsUUFBN0IsSUFBeUNQLFdBRDFDLENBQUosRUFDNEQ7QUFDMURNLGNBQVVFLGFBQVYsQ0FBd0JDLFFBQXhCLENBQWlDLG1CQUFqQztBQUNDQyxRQURELENBQ00sVUFBU0MsWUFBVCxFQUF1QjtBQUMzQjtBQUNBQSxtQkFBYUMsYUFBYixHQUE2QixZQUFXO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBSU4sVUFBVUUsYUFBVixDQUF3QkssVUFBNUIsRUFBd0M7QUFDdEM7QUFDQTtBQUNBLGNBQUlDLG1CQUFtQkgsYUFBYUksVUFBcEM7O0FBRUFELDJCQUFpQkUsYUFBakIsR0FBaUMsWUFBVztBQUMxQyxvQkFBUUYsaUJBQWlCRyxLQUF6QjtBQUNFLG1CQUFLLFdBQUw7QUFDRTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVGLG1CQUFLLFdBQUw7QUFDRSxzQkFBTSxJQUFJQyxLQUFKLENBQVU7QUFDQSxrREFEVixDQUFOOztBQUdGO0FBQ0U7QUFiSjtBQWVELFdBaEJEO0FBaUJEO0FBQ0YsT0E1QkQ7QUE2QkQsS0FoQ0QsRUFnQ0dDLEtBaENILENBZ0NTLFVBQVNDLENBQVQsRUFBWTtBQUNuQkMsY0FBUUMsS0FBUixDQUFjLDJDQUFkLEVBQTJERixDQUEzRDtBQUNELEtBbENEO0FBbUNEOztBQUVEO0FBQ0QsQ0F4REQiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICpcbiAqICBXZWIgU3RhcnRlciBLaXRcbiAqICBDb3B5cmlnaHQgMjAxNSBHb29nbGUgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlXG4gKlxuICovXG4vKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cbihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENoZWNrIHRvIG1ha2Ugc3VyZSBzZXJ2aWNlIHdvcmtlcnMgYXJlIHN1cHBvcnRlZCBpbiB0aGUgY3VycmVudCBicm93c2VyLFxuICAvLyBhbmQgdGhhdCB0aGUgY3VycmVudCBwYWdlIGlzIGFjY2Vzc2VkIGZyb20gYSBzZWN1cmUgb3JpZ2luLiBVc2luZyBhXG4gIC8vIHNlcnZpY2Ugd29ya2VyIGZyb20gYW4gaW5zZWN1cmUgb3JpZ2luIHdpbGwgdHJpZ2dlciBKUyBjb25zb2xlIGVycm9ycy4gU2VlXG4gIC8vIGh0dHA6Ly93d3cuY2hyb21pdW0ub3JnL0hvbWUvY2hyb21pdW0tc2VjdXJpdHkvcHJlZmVyLXNlY3VyZS1vcmlnaW5zLWZvci1wb3dlcmZ1bC1uZXctZmVhdHVyZXNcbiAgdmFyIGlzTG9jYWxob3N0ID0gQm9vbGVhbih3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgPT09ICdsb2NhbGhvc3QnIHx8XG4gICAgICAvLyBbOjoxXSBpcyB0aGUgSVB2NiBsb2NhbGhvc3QgYWRkcmVzcy5cbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ1s6OjFdJyB8fFxuICAgICAgLy8gMTI3LjAuMC4xLzggaXMgY29uc2lkZXJlZCBsb2NhbGhvc3QgZm9yIElQdjQuXG4gICAgICB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUubWF0Y2goXG4gICAgICAgIC9eMTI3KD86XFwuKD86MjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSl7M30kL1xuICAgICAgKVxuICAgICk7XG5cbiAgaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IgJiZcbiAgICAgICh3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwczonIHx8IGlzTG9jYWxob3N0KSkge1xuICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCdzZXJ2aWNlLXdvcmtlci5qcycpXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVnaXN0cmF0aW9uKSB7XG4gICAgICAvLyB1cGRhdGVmb3VuZCBpcyBmaXJlZCBpZiBzZXJ2aWNlLXdvcmtlci5qcyBjaGFuZ2VzLlxuICAgICAgcmVnaXN0cmF0aW9uLm9udXBkYXRlZm91bmQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gdXBkYXRlZm91bmQgaXMgYWxzbyBmaXJlZCB0aGUgdmVyeSBmaXJzdCB0aW1lIHRoZSBTVyBpcyBpbnN0YWxsZWQsXG4gICAgICAgIC8vIGFuZCB0aGVyZSdzIG5vIG5lZWQgdG8gcHJvbXB0IGZvciBhIHJlbG9hZCBhdCB0aGF0IHBvaW50LlxuICAgICAgICAvLyBTbyBjaGVjayBoZXJlIHRvIHNlZSBpZiB0aGUgcGFnZSBpcyBhbHJlYWR5IGNvbnRyb2xsZWQsXG4gICAgICAgIC8vIGkuZS4gd2hldGhlciB0aGVyZSdzIGFuIGV4aXN0aW5nIHNlcnZpY2Ugd29ya2VyLlxuICAgICAgICBpZiAobmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlcikge1xuICAgICAgICAgIC8vIFRoZSB1cGRhdGVmb3VuZCBldmVudCBpbXBsaWVzIHRoYXQgcmVnaXN0cmF0aW9uLmluc3RhbGxpbmcgaXMgc2V0OlxuICAgICAgICAgIC8vIGh0dHBzOi8vc2xpZ2h0bHlvZmYuZ2l0aHViLmlvL1NlcnZpY2VXb3JrZXIvc3BlYy9zZXJ2aWNlX3dvcmtlci9pbmRleC5odG1sI3NlcnZpY2Utd29ya2VyLWNvbnRhaW5lci11cGRhdGVmb3VuZC1ldmVudFxuICAgICAgICAgIHZhciBpbnN0YWxsaW5nV29ya2VyID0gcmVnaXN0cmF0aW9uLmluc3RhbGxpbmc7XG5cbiAgICAgICAgICBpbnN0YWxsaW5nV29ya2VyLm9uc3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoaW5zdGFsbGluZ1dvcmtlci5zdGF0ZSkge1xuICAgICAgICAgICAgICBjYXNlICdpbnN0YWxsZWQnOlxuICAgICAgICAgICAgICAgIC8vIEF0IHRoaXMgcG9pbnQsIHRoZSBvbGQgY29udGVudCB3aWxsIGhhdmUgYmVlbiBwdXJnZWQgYW5kIHRoZVxuICAgICAgICAgICAgICAgIC8vIGZyZXNoIGNvbnRlbnQgd2lsbCBoYXZlIGJlZW4gYWRkZWQgdG8gdGhlIGNhY2hlLlxuICAgICAgICAgICAgICAgIC8vIEl0J3MgdGhlIHBlcmZlY3QgdGltZSB0byBkaXNwbGF5IGEgXCJOZXcgY29udGVudCBpc1xuICAgICAgICAgICAgICAgIC8vIGF2YWlsYWJsZTsgcGxlYXNlIHJlZnJlc2guXCIgbWVzc2FnZSBpbiB0aGUgcGFnZSdzIGludGVyZmFjZS5cbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlICdyZWR1bmRhbnQnOlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIGluc3RhbGxpbmcgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzZXJ2aWNlIHdvcmtlciBiZWNhbWUgcmVkdW5kYW50LicpO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgLy8gSWdub3JlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KS5jYXRjaChmdW5jdGlvbihlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkdXJpbmcgc2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uOicsIGUpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gWW91ciBjdXN0b20gSmF2YVNjcmlwdCBnb2VzIGhlcmVcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=\n\n\"use strict\";var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}(function e(t, n, r) {function s(o, u) {if (!n[o]) {if (!t[o]) {var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);throw new Error(\"Cannot find module '\" + o + \"'\");}var f = n[o] = { exports: {} };t[o][0].call(f.exports, function (e) {var n = t[o][1][e];return s(n ? n : e);}, f, f.exports, e, t, n, r);}return n[o].exports;}var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {s(r[o]);}return s;})({ 1: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {var\n\n      StateManager = function () {\n\n        function StateManager(element) {_classCallCheck(this, StateManager);\n          this.element = element;\n          this.state = 'init';\n          this.element.classList.add('state-' + this.state);\n        }_createClass(StateManager, [{ key: \"change\", value: function change(\n\n          state) {\n            this.element.classList.remove('state-' + this.state);\n            this.state = state;\n            this.element.classList.add('state-' + this.state);\n          } }]);return StateManager;}();\n\n\n      var element = document.getElementById('js-state-manager');\n      var stateManager = new StateManager(element);\n\n      module.exports = stateManager;\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/app/state.js\", \"/app\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }], 2: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      // const BluetoothDevice = require('web-bluetooth');\n      //\n      // const pepe = () => {\n      //   console.log(BluetoothDevice);\n      // };\n      // pepe();\n\n      var stateManager = require('./app/state.js');\n\n      var connectButton = document.getElementById('js-connect');\n      var disconnectButton = document.getElementById('js-disconnect');\n\n      connectButton.addEventListener('click', function () {\n        connectButton.disabled = true;\n        stateManager.change('connecting');\n        setTimeout(function () {\n          stateManager.change('connected');\n          connectButton.disabled = false;\n        },\n        1000);\n      });\n\n      disconnectButton.addEventListener('click', function () {\n        stateManager.change('init');\n      });\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/fake_b3d4d4f8.js\", \"/\");\n  }, { \"./app/state.js\": 1, \"b55mWE\": 5, \"buffer\": 4 }], 3: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n      ;(function (exports) {\n        'use strict';\n\n        var Arr = typeof Uint8Array !== 'undefined' ?\n        Uint8Array :\n        Array;\n\n        var PLUS = '+'.charCodeAt(0);\n        var SLASH = '/'.charCodeAt(0);\n        var NUMBER = '0'.charCodeAt(0);\n        var LOWER = 'a'.charCodeAt(0);\n        var UPPER = 'A'.charCodeAt(0);\n        var PLUS_URL_SAFE = '-'.charCodeAt(0);\n        var SLASH_URL_SAFE = '_'.charCodeAt(0);\n\n        function decode(elt) {\n          var code = elt.charCodeAt(0);\n          if (code === PLUS ||\n          code === PLUS_URL_SAFE)\n          return 62; // '+'\n          if (code === SLASH ||\n          code === SLASH_URL_SAFE)\n          return 63; // '/'\n          if (code < NUMBER)\n          return -1; //no match\n          if (code < NUMBER + 10)\n          return code - NUMBER + 26 + 26;\n          if (code < UPPER + 26)\n          return code - UPPER;\n          if (code < LOWER + 26)\n          return code - LOWER + 26;\n        }\n\n        function b64ToByteArray(b64) {\n          var i, j, l, tmp, placeHolders, arr;\n\n          if (b64.length % 4 > 0) {\n            throw new Error('Invalid string. Length must be a multiple of 4');\n          }\n\n          // the number of equal signs (place holders)\n          // if there are two placeholders, than the two characters before it\n          // represent one byte\n          // if there is only one, then the three characters before it represent 2 bytes\n          // this is just a cheap hack to not do indexOf twice\n          var len = b64.length;\n          placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0;\n\n          // base64 is 4/3 + up to two characters of the original data\n          arr = new Arr(b64.length * 3 / 4 - placeHolders);\n\n          // if there are placeholders, only get up to the last complete 4 chars\n          l = placeHolders > 0 ? b64.length - 4 : b64.length;\n\n          var L = 0;\n\n          function push(v) {\n            arr[L++] = v;\n          }\n\n          for (i = 0, j = 0; i < l; i += 4, j += 3) {\n            tmp = decode(b64.charAt(i)) << 18 | decode(b64.charAt(i + 1)) << 12 | decode(b64.charAt(i + 2)) << 6 | decode(b64.charAt(i + 3));\n            push((tmp & 0xFF0000) >> 16);\n            push((tmp & 0xFF00) >> 8);\n            push(tmp & 0xFF);\n          }\n\n          if (placeHolders === 2) {\n            tmp = decode(b64.charAt(i)) << 2 | decode(b64.charAt(i + 1)) >> 4;\n            push(tmp & 0xFF);\n          } else if (placeHolders === 1) {\n            tmp = decode(b64.charAt(i)) << 10 | decode(b64.charAt(i + 1)) << 4 | decode(b64.charAt(i + 2)) >> 2;\n            push(tmp >> 8 & 0xFF);\n            push(tmp & 0xFF);\n          }\n\n          return arr;\n        }\n\n        function uint8ToBase64(uint8) {\n          var i,\n          extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n          output = \"\",\n          temp,length;\n\n          function encode(num) {\n            return lookup.charAt(num);\n          }\n\n          function tripletToBase64(num) {\n            return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F);\n          }\n\n          // go through the array every three bytes, we'll deal with trailing stuff later\n          for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n            temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n            output += tripletToBase64(temp);\n          }\n\n          // pad the end with zeros, but make sure to not forget the extra bytes\n          switch (extraBytes) {\n            case 1:\n              temp = uint8[uint8.length - 1];\n              output += encode(temp >> 2);\n              output += encode(temp << 4 & 0x3F);\n              output += '==';\n              break;\n            case 2:\n              temp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];\n              output += encode(temp >> 10);\n              output += encode(temp >> 4 & 0x3F);\n              output += encode(temp << 2 & 0x3F);\n              output += '=';\n              break;}\n\n\n          return output;\n        }\n\n        exports.toByteArray = b64ToByteArray;\n        exports.fromByteArray = uint8ToBase64;\n      })(typeof exports === 'undefined' ? this.base64js = {} : exports);\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\", \"/../../node_modules/gulp-browserify/node_modules/base64-js/lib\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }], 4: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      /*!\n                                                                                                                     * The buffer module from node.js, for the browser.\n                                                                                                                     *\n                                                                                                                     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n                                                                                                                     * @license  MIT\n                                                                                                                     */\n\n      var base64 = require('base64-js');\n      var ieee754 = require('ieee754');\n\n      exports.Buffer = Buffer;\n      exports.SlowBuffer = Buffer;\n      exports.INSPECT_MAX_BYTES = 50;\n      Buffer.poolSize = 8192;\n\n      /**\n                               * If `Buffer._useTypedArrays`:\n                               *   === true    Use Uint8Array implementation (fastest)\n                               *   === false   Use Object implementation (compatible down to IE6)\n                               */\n      Buffer._useTypedArrays = function () {\n        // Detect if browser supports Typed Arrays. Supported browsers are IE 10+, Firefox 4+,\n        // Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+. If the browser does not support adding\n        // properties to `Uint8Array` instances, then that's the same as no `Uint8Array` support\n        // because we need to be able to add all the node Buffer API methods. This is an issue\n        // in Firefox 4-29. Now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438\n        try {\n          var buf = new ArrayBuffer(0);\n          var arr = new Uint8Array(buf);\n          arr.foo = function () {return 42;};\n          return 42 === arr.foo() &&\n          typeof arr.subarray === 'function'; // Chrome 9-10 lack `subarray`\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      /**\n            * Class: Buffer\n            * =============\n            *\n            * The Buffer constructor returns instances of `Uint8Array` that are augmented\n            * with function properties for all the node `Buffer` API functions. We use\n            * `Uint8Array` so that square bracket notation works as expected -- it returns\n            * a single octet.\n            *\n            * By augmenting the instances, we can avoid modifying the `Uint8Array`\n            * prototype.\n            */\n      function Buffer(subject, encoding, noZero) {\n        if (!(this instanceof Buffer))\n        return new Buffer(subject, encoding, noZero);\n\n        var type = typeof subject === \"undefined\" ? \"undefined\" : _typeof(subject);\n\n        // Workaround: node's base64 implementation allows for non-padded strings\n        // while base64-js does not.\n        if (encoding === 'base64' && type === 'string') {\n          subject = stringtrim(subject);\n          while (subject.length % 4 !== 0) {\n            subject = subject + '=';\n          }\n        }\n\n        // Find the length\n        var length;\n        if (type === 'number')\n        length = coerce(subject);else\n        if (type === 'string')\n        length = Buffer.byteLength(subject, encoding);else\n        if (type === 'object')\n        length = coerce(subject.length); // assume that object is array-like\n        else\n          throw new Error('First argument needs to be a number, array or string.');\n\n        var buf;\n        if (Buffer._useTypedArrays) {\n          // Preferred: Return an augmented `Uint8Array` instance for best performance\n          buf = Buffer._augment(new Uint8Array(length));\n        } else {\n          // Fallback: Return THIS instance of Buffer (created by `new`)\n          buf = this;\n          buf.length = length;\n          buf._isBuffer = true;\n        }\n\n        var i;\n        if (Buffer._useTypedArrays && typeof subject.byteLength === 'number') {\n          // Speed optimization -- use set if we're copying from a typed array\n          buf._set(subject);\n        } else if (isArrayish(subject)) {\n          // Treat array-ish objects as a byte array\n          for (i = 0; i < length; i++) {\n            if (Buffer.isBuffer(subject))\n            buf[i] = subject.readUInt8(i);else\n\n            buf[i] = subject[i];\n          }\n        } else if (type === 'string') {\n          buf.write(subject, 0, encoding);\n        } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {\n          for (i = 0; i < length; i++) {\n            buf[i] = 0;\n          }\n        }\n\n        return buf;\n      }\n\n      // STATIC METHODS\n      // ==============\n\n      Buffer.isEncoding = function (encoding) {\n        switch (String(encoding).toLowerCase()) {\n          case 'hex':\n          case 'utf8':\n          case 'utf-8':\n          case 'ascii':\n          case 'binary':\n          case 'base64':\n          case 'raw':\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return true;\n          default:\n            return false;}\n\n      };\n\n      Buffer.isBuffer = function (b) {\n        return !!(b !== null && b !== undefined && b._isBuffer);\n      };\n\n      Buffer.byteLength = function (str, encoding) {\n        var ret;\n        str = str + '';\n        switch (encoding || 'utf8') {\n          case 'hex':\n            ret = str.length / 2;\n            break;\n          case 'utf8':\n          case 'utf-8':\n            ret = utf8ToBytes(str).length;\n            break;\n          case 'ascii':\n          case 'binary':\n          case 'raw':\n            ret = str.length;\n            break;\n          case 'base64':\n            ret = base64ToBytes(str).length;\n            break;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            ret = str.length * 2;\n            break;\n          default:\n            throw new Error('Unknown encoding');}\n\n        return ret;\n      };\n\n      Buffer.concat = function (list, totalLength) {\n        assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\\n' +\n        'list should be an Array.');\n\n        if (list.length === 0) {\n          return new Buffer(0);\n        } else if (list.length === 1) {\n          return list[0];\n        }\n\n        var i;\n        if (typeof totalLength !== 'number') {\n          totalLength = 0;\n          for (i = 0; i < list.length; i++) {\n            totalLength += list[i].length;\n          }\n        }\n\n        var buf = new Buffer(totalLength);\n        var pos = 0;\n        for (i = 0; i < list.length; i++) {\n          var item = list[i];\n          item.copy(buf, pos);\n          pos += item.length;\n        }\n        return buf;\n      };\n\n      // BUFFER INSTANCE METHODS\n      // =======================\n\n      function _hexWrite(buf, string, offset, length) {\n        offset = Number(offset) || 0;\n        var remaining = buf.length - offset;\n        if (!length) {\n          length = remaining;\n        } else {\n          length = Number(length);\n          if (length > remaining) {\n            length = remaining;\n          }\n        }\n\n        // must be an even number of digits\n        var strLen = string.length;\n        assert(strLen % 2 === 0, 'Invalid hex string');\n\n        if (length > strLen / 2) {\n          length = strLen / 2;\n        }\n        for (var i = 0; i < length; i++) {\n          var byte = parseInt(string.substr(i * 2, 2), 16);\n          assert(!isNaN(byte), 'Invalid hex string');\n          buf[offset + i] = byte;\n        }\n        Buffer._charsWritten = i * 2;\n        return i;\n      }\n\n      function _utf8Write(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(utf8ToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      function _asciiWrite(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(asciiToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      function _binaryWrite(buf, string, offset, length) {\n        return _asciiWrite(buf, string, offset, length);\n      }\n\n      function _base64Write(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(base64ToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      function _utf16leWrite(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(utf16leToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      Buffer.prototype.write = function (string, offset, length, encoding) {\n        // Support both (string, offset, length, encoding)\n        // and the legacy (string, encoding, offset, length)\n        if (isFinite(offset)) {\n          if (!isFinite(length)) {\n            encoding = length;\n            length = undefined;\n          }\n        } else {// legacy\n          var swap = encoding;\n          encoding = offset;\n          offset = length;\n          length = swap;\n        }\n\n        offset = Number(offset) || 0;\n        var remaining = this.length - offset;\n        if (!length) {\n          length = remaining;\n        } else {\n          length = Number(length);\n          if (length > remaining) {\n            length = remaining;\n          }\n        }\n        encoding = String(encoding || 'utf8').toLowerCase();\n\n        var ret;\n        switch (encoding) {\n          case 'hex':\n            ret = _hexWrite(this, string, offset, length);\n            break;\n          case 'utf8':\n          case 'utf-8':\n            ret = _utf8Write(this, string, offset, length);\n            break;\n          case 'ascii':\n            ret = _asciiWrite(this, string, offset, length);\n            break;\n          case 'binary':\n            ret = _binaryWrite(this, string, offset, length);\n            break;\n          case 'base64':\n            ret = _base64Write(this, string, offset, length);\n            break;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            ret = _utf16leWrite(this, string, offset, length);\n            break;\n          default:\n            throw new Error('Unknown encoding');}\n\n        return ret;\n      };\n\n      Buffer.prototype.toString = function (encoding, start, end) {\n        var self = this;\n\n        encoding = String(encoding || 'utf8').toLowerCase();\n        start = Number(start) || 0;\n        end = end !== undefined ?\n        Number(end) :\n        end = self.length;\n\n        // Fastpath empty strings\n        if (end === start)\n        return '';\n\n        var ret;\n        switch (encoding) {\n          case 'hex':\n            ret = _hexSlice(self, start, end);\n            break;\n          case 'utf8':\n          case 'utf-8':\n            ret = _utf8Slice(self, start, end);\n            break;\n          case 'ascii':\n            ret = _asciiSlice(self, start, end);\n            break;\n          case 'binary':\n            ret = _binarySlice(self, start, end);\n            break;\n          case 'base64':\n            ret = _base64Slice(self, start, end);\n            break;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            ret = _utf16leSlice(self, start, end);\n            break;\n          default:\n            throw new Error('Unknown encoding');}\n\n        return ret;\n      };\n\n      Buffer.prototype.toJSON = function () {\n        return {\n          type: 'Buffer',\n          data: Array.prototype.slice.call(this._arr || this, 0) };\n\n      };\n\n      // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n      Buffer.prototype.copy = function (target, target_start, start, end) {\n        var source = this;\n\n        if (!start) start = 0;\n        if (!end && end !== 0) end = this.length;\n        if (!target_start) target_start = 0;\n\n        // Copy 0 bytes; we're done\n        if (end === start) return;\n        if (target.length === 0 || source.length === 0) return;\n\n        // Fatal error conditions\n        assert(end >= start, 'sourceEnd < sourceStart');\n        assert(target_start >= 0 && target_start < target.length,\n        'targetStart out of bounds');\n        assert(start >= 0 && start < source.length, 'sourceStart out of bounds');\n        assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds');\n\n        // Are we oob?\n        if (end > this.length)\n        end = this.length;\n        if (target.length - target_start < end - start)\n        end = target.length - target_start + start;\n\n        var len = end - start;\n\n        if (len < 100 || !Buffer._useTypedArrays) {\n          for (var i = 0; i < len; i++) {\n            target[i + target_start] = this[i + start];}\n        } else {\n          target._set(this.subarray(start, start + len), target_start);\n        }\n      };\n\n      function _base64Slice(buf, start, end) {\n        if (start === 0 && end === buf.length) {\n          return base64.fromByteArray(buf);\n        } else {\n          return base64.fromByteArray(buf.slice(start, end));\n        }\n      }\n\n      function _utf8Slice(buf, start, end) {\n        var res = '';\n        var tmp = '';\n        end = Math.min(buf.length, end);\n\n        for (var i = start; i < end; i++) {\n          if (buf[i] <= 0x7F) {\n            res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n            tmp = '';\n          } else {\n            tmp += '%' + buf[i].toString(16);\n          }\n        }\n\n        return res + decodeUtf8Char(tmp);\n      }\n\n      function _asciiSlice(buf, start, end) {\n        var ret = '';\n        end = Math.min(buf.length, end);\n\n        for (var i = start; i < end; i++) {\n          ret += String.fromCharCode(buf[i]);}\n        return ret;\n      }\n\n      function _binarySlice(buf, start, end) {\n        return _asciiSlice(buf, start, end);\n      }\n\n      function _hexSlice(buf, start, end) {\n        var len = buf.length;\n\n        if (!start || start < 0) start = 0;\n        if (!end || end < 0 || end > len) end = len;\n\n        var out = '';\n        for (var i = start; i < end; i++) {\n          out += toHex(buf[i]);\n        }\n        return out;\n      }\n\n      function _utf16leSlice(buf, start, end) {\n        var bytes = buf.slice(start, end);\n        var res = '';\n        for (var i = 0; i < bytes.length; i += 2) {\n          res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n        }\n        return res;\n      }\n\n      Buffer.prototype.slice = function (start, end) {\n        var len = this.length;\n        start = clamp(start, len, 0);\n        end = clamp(end, len, len);\n\n        if (Buffer._useTypedArrays) {\n          return Buffer._augment(this.subarray(start, end));\n        } else {\n          var sliceLen = end - start;\n          var newBuf = new Buffer(sliceLen, undefined, true);\n          for (var i = 0; i < sliceLen; i++) {\n            newBuf[i] = this[i + start];\n          }\n          return newBuf;\n        }\n      };\n\n      // `get` will be removed in Node 0.13+\n      Buffer.prototype.get = function (offset) {\n        console.log('.get() is deprecated. Access using array indexes instead.');\n        return this.readUInt8(offset);\n      };\n\n      // `set` will be removed in Node 0.13+\n      Buffer.prototype.set = function (v, offset) {\n        console.log('.set() is deprecated. Access using array indexes instead.');\n        return this.writeUInt8(v, offset);\n      };\n\n      Buffer.prototype.readUInt8 = function (offset, noAssert) {\n        if (!noAssert) {\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset < this.length, 'Trying to read beyond buffer length');\n        }\n\n        if (offset >= this.length)\n        return;\n\n        return this[offset];\n      };\n\n      function _readUInt16(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val;\n        if (littleEndian) {\n          val = buf[offset];\n          if (offset + 1 < len)\n          val |= buf[offset + 1] << 8;\n        } else {\n          val = buf[offset] << 8;\n          if (offset + 1 < len)\n          val |= buf[offset + 1];\n        }\n        return val;\n      }\n\n      Buffer.prototype.readUInt16LE = function (offset, noAssert) {\n        return _readUInt16(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readUInt16BE = function (offset, noAssert) {\n        return _readUInt16(this, offset, false, noAssert);\n      };\n\n      function _readUInt32(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val;\n        if (littleEndian) {\n          if (offset + 2 < len)\n          val = buf[offset + 2] << 16;\n          if (offset + 1 < len)\n          val |= buf[offset + 1] << 8;\n          val |= buf[offset];\n          if (offset + 3 < len)\n          val = val + (buf[offset + 3] << 24 >>> 0);\n        } else {\n          if (offset + 1 < len)\n          val = buf[offset + 1] << 16;\n          if (offset + 2 < len)\n          val |= buf[offset + 2] << 8;\n          if (offset + 3 < len)\n          val |= buf[offset + 3];\n          val = val + (buf[offset] << 24 >>> 0);\n        }\n        return val;\n      }\n\n      Buffer.prototype.readUInt32LE = function (offset, noAssert) {\n        return _readUInt32(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readUInt32BE = function (offset, noAssert) {\n        return _readUInt32(this, offset, false, noAssert);\n      };\n\n      Buffer.prototype.readInt8 = function (offset, noAssert) {\n        if (!noAssert) {\n          assert(offset !== undefined && offset !== null,\n          'missing offset');\n          assert(offset < this.length, 'Trying to read beyond buffer length');\n        }\n\n        if (offset >= this.length)\n        return;\n\n        var neg = this[offset] & 0x80;\n        if (neg)\n        return (0xff - this[offset] + 1) * -1;else\n\n        return this[offset];\n      };\n\n      function _readInt16(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val = _readUInt16(buf, offset, littleEndian, true);\n        var neg = val & 0x8000;\n        if (neg)\n        return (0xffff - val + 1) * -1;else\n\n        return val;\n      }\n\n      Buffer.prototype.readInt16LE = function (offset, noAssert) {\n        return _readInt16(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readInt16BE = function (offset, noAssert) {\n        return _readInt16(this, offset, false, noAssert);\n      };\n\n      function _readInt32(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val = _readUInt32(buf, offset, littleEndian, true);\n        var neg = val & 0x80000000;\n        if (neg)\n        return (0xffffffff - val + 1) * -1;else\n\n        return val;\n      }\n\n      Buffer.prototype.readInt32LE = function (offset, noAssert) {\n        return _readInt32(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readInt32BE = function (offset, noAssert) {\n        return _readInt32(this, offset, false, noAssert);\n      };\n\n      function _readFloat(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset + 3 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        return ieee754.read(buf, offset, littleEndian, 23, 4);\n      }\n\n      Buffer.prototype.readFloatLE = function (offset, noAssert) {\n        return _readFloat(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readFloatBE = function (offset, noAssert) {\n        return _readFloat(this, offset, false, noAssert);\n      };\n\n      function _readDouble(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset + 7 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        return ieee754.read(buf, offset, littleEndian, 52, 8);\n      }\n\n      Buffer.prototype.readDoubleLE = function (offset, noAssert) {\n        return _readDouble(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readDoubleBE = function (offset, noAssert) {\n        return _readDouble(this, offset, false, noAssert);\n      };\n\n      Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset < this.length, 'trying to write beyond buffer length');\n          verifuint(value, 0xff);\n        }\n\n        if (offset >= this.length) return;\n\n        this[offset] = value;\n      };\n\n      function _writeUInt16(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'trying to write beyond buffer length');\n          verifuint(value, 0xffff);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {\n          buf[offset + i] =\n          (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>>\n          (littleEndian ? i : 1 - i) * 8;\n        }\n      }\n\n      Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n        _writeUInt16(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n        _writeUInt16(this, value, offset, false, noAssert);\n      };\n\n      function _writeUInt32(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'trying to write beyond buffer length');\n          verifuint(value, 0xffffffff);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {\n          buf[offset + i] =\n          value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n        }\n      }\n\n      Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n        _writeUInt32(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n        _writeUInt32(this, value, offset, false, noAssert);\n      };\n\n      Buffer.prototype.writeInt8 = function (value, offset, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset < this.length, 'Trying to write beyond buffer length');\n          verifsint(value, 0x7f, -0x80);\n        }\n\n        if (offset >= this.length)\n        return;\n\n        if (value >= 0)\n        this.writeUInt8(value, offset, noAssert);else\n\n        this.writeUInt8(0xff + value + 1, offset, noAssert);\n      };\n\n      function _writeInt16(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'Trying to write beyond buffer length');\n          verifsint(value, 0x7fff, -0x8000);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        if (value >= 0)\n        _writeUInt16(buf, value, offset, littleEndian, noAssert);else\n\n        _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert);\n      }\n\n      Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n        _writeInt16(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n        _writeInt16(this, value, offset, false, noAssert);\n      };\n\n      function _writeInt32(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to write beyond buffer length');\n          verifsint(value, 0x7fffffff, -0x80000000);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        if (value >= 0)\n        _writeUInt32(buf, value, offset, littleEndian, noAssert);else\n\n        _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert);\n      }\n\n      Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n        _writeInt32(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n        _writeInt32(this, value, offset, false, noAssert);\n      };\n\n      function _writeFloat(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to write beyond buffer length');\n          verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      }\n\n      Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n        _writeFloat(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n        _writeFloat(this, value, offset, false, noAssert);\n      };\n\n      function _writeDouble(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 7 < buf.length,\n          'Trying to write beyond buffer length');\n          verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      }\n\n      Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n        _writeDouble(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n        _writeDouble(this, value, offset, false, noAssert);\n      };\n\n      // fill(value, start=0, end=buffer.length)\n      Buffer.prototype.fill = function (value, start, end) {\n        if (!value) value = 0;\n        if (!start) start = 0;\n        if (!end) end = this.length;\n\n        if (typeof value === 'string') {\n          value = value.charCodeAt(0);\n        }\n\n        assert(typeof value === 'number' && !isNaN(value), 'value is not a number');\n        assert(end >= start, 'end < start');\n\n        // Fill 0 bytes; we're done\n        if (end === start) return;\n        if (this.length === 0) return;\n\n        assert(start >= 0 && start < this.length, 'start out of bounds');\n        assert(end >= 0 && end <= this.length, 'end out of bounds');\n\n        for (var i = start; i < end; i++) {\n          this[i] = value;\n        }\n      };\n\n      Buffer.prototype.inspect = function () {\n        var out = [];\n        var len = this.length;\n        for (var i = 0; i < len; i++) {\n          out[i] = toHex(this[i]);\n          if (i === exports.INSPECT_MAX_BYTES) {\n            out[i + 1] = '...';\n            break;\n          }\n        }\n        return '<Buffer ' + out.join(' ') + '>';\n      };\n\n      /**\n          * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n          * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n          */\n      Buffer.prototype.toArrayBuffer = function () {\n        if (typeof Uint8Array !== 'undefined') {\n          if (Buffer._useTypedArrays) {\n            return new Buffer(this).buffer;\n          } else {\n            var buf = new Uint8Array(this.length);\n            for (var i = 0, len = buf.length; i < len; i += 1) {\n              buf[i] = this[i];}\n            return buf.buffer;\n          }\n        } else {\n          throw new Error('Buffer.toArrayBuffer not supported in this browser');\n        }\n      };\n\n      // HELPER FUNCTIONS\n      // ================\n\n      function stringtrim(str) {\n        if (str.trim) return str.trim();\n        return str.replace(/^\\s+|\\s+$/g, '');\n      }\n\n      var BP = Buffer.prototype;\n\n      /**\n                                  * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n                                  */\n      Buffer._augment = function (arr) {\n        arr._isBuffer = true;\n\n        // save reference to original Uint8Array get/set methods before overwriting\n        arr._get = arr.get;\n        arr._set = arr.set;\n\n        // deprecated, will be removed in node 0.13+\n        arr.get = BP.get;\n        arr.set = BP.set;\n\n        arr.write = BP.write;\n        arr.toString = BP.toString;\n        arr.toLocaleString = BP.toString;\n        arr.toJSON = BP.toJSON;\n        arr.copy = BP.copy;\n        arr.slice = BP.slice;\n        arr.readUInt8 = BP.readUInt8;\n        arr.readUInt16LE = BP.readUInt16LE;\n        arr.readUInt16BE = BP.readUInt16BE;\n        arr.readUInt32LE = BP.readUInt32LE;\n        arr.readUInt32BE = BP.readUInt32BE;\n        arr.readInt8 = BP.readInt8;\n        arr.readInt16LE = BP.readInt16LE;\n        arr.readInt16BE = BP.readInt16BE;\n        arr.readInt32LE = BP.readInt32LE;\n        arr.readInt32BE = BP.readInt32BE;\n        arr.readFloatLE = BP.readFloatLE;\n        arr.readFloatBE = BP.readFloatBE;\n        arr.readDoubleLE = BP.readDoubleLE;\n        arr.readDoubleBE = BP.readDoubleBE;\n        arr.writeUInt8 = BP.writeUInt8;\n        arr.writeUInt16LE = BP.writeUInt16LE;\n        arr.writeUInt16BE = BP.writeUInt16BE;\n        arr.writeUInt32LE = BP.writeUInt32LE;\n        arr.writeUInt32BE = BP.writeUInt32BE;\n        arr.writeInt8 = BP.writeInt8;\n        arr.writeInt16LE = BP.writeInt16LE;\n        arr.writeInt16BE = BP.writeInt16BE;\n        arr.writeInt32LE = BP.writeInt32LE;\n        arr.writeInt32BE = BP.writeInt32BE;\n        arr.writeFloatLE = BP.writeFloatLE;\n        arr.writeFloatBE = BP.writeFloatBE;\n        arr.writeDoubleLE = BP.writeDoubleLE;\n        arr.writeDoubleBE = BP.writeDoubleBE;\n        arr.fill = BP.fill;\n        arr.inspect = BP.inspect;\n        arr.toArrayBuffer = BP.toArrayBuffer;\n\n        return arr;\n      };\n\n      // slice(start, end)\n      function clamp(index, len, defaultValue) {\n        if (typeof index !== 'number') return defaultValue;\n        index = ~~index; // Coerce to integer.\n        if (index >= len) return len;\n        if (index >= 0) return index;\n        index += len;\n        if (index >= 0) return index;\n        return 0;\n      }\n\n      function coerce(length) {\n        // Coerce length to a number (possibly NaN), round up\n        // in case it's fractional (e.g. 123.456) then do a\n        // double negate to coerce a NaN to 0. Easy, right?\n        length = ~~Math.ceil(+length);\n        return length < 0 ? 0 : length;\n      }\n\n      function isArray(subject) {\n        return (Array.isArray || function (subject) {\n          return Object.prototype.toString.call(subject) === '[object Array]';\n        })(subject);\n      }\n\n      function isArrayish(subject) {\n        return isArray(subject) || Buffer.isBuffer(subject) ||\n        subject && (typeof subject === \"undefined\" ? \"undefined\" : _typeof(subject)) === 'object' &&\n        typeof subject.length === 'number';\n      }\n\n      function toHex(n) {\n        if (n < 16) return '0' + n.toString(16);\n        return n.toString(16);\n      }\n\n      function utf8ToBytes(str) {\n        var byteArray = [];\n        for (var i = 0; i < str.length; i++) {\n          var b = str.charCodeAt(i);\n          if (b <= 0x7F)\n          byteArray.push(str.charCodeAt(i));else\n          {\n            var start = i;\n            if (b >= 0xD800 && b <= 0xDFFF) i++;\n            var h = encodeURIComponent(str.slice(start, i + 1)).substr(1).split('%');\n            for (var j = 0; j < h.length; j++) {\n              byteArray.push(parseInt(h[j], 16));}\n          }\n        }\n        return byteArray;\n      }\n\n      function asciiToBytes(str) {\n        var byteArray = [];\n        for (var i = 0; i < str.length; i++) {\n          // Node's code seems to be doing this and not & 0x7F..\n          byteArray.push(str.charCodeAt(i) & 0xFF);\n        }\n        return byteArray;\n      }\n\n      function utf16leToBytes(str) {\n        var c, hi, lo;\n        var byteArray = [];\n        for (var i = 0; i < str.length; i++) {\n          c = str.charCodeAt(i);\n          hi = c >> 8;\n          lo = c % 256;\n          byteArray.push(lo);\n          byteArray.push(hi);\n        }\n\n        return byteArray;\n      }\n\n      function base64ToBytes(str) {\n        return base64.toByteArray(str);\n      }\n\n      function blitBuffer(src, dst, offset, length) {\n        var pos;\n        for (var i = 0; i < length; i++) {\n          if (i + offset >= dst.length || i >= src.length)\n          break;\n          dst[i + offset] = src[i];\n        }\n        return i;\n      }\n\n      function decodeUtf8Char(str) {\n        try {\n          return decodeURIComponent(str);\n        } catch (err) {\n          return String.fromCharCode(0xFFFD); // UTF 8 invalid char\n        }\n      }\n\n      /*\n         * We have to make sure that the value is a valid integer. This means that it\n         * is non-negative. It has no fractional component and that it does not\n         * exceed the maximum allowed value.\n         */\n      function verifuint(value, max) {\n        assert(typeof value === 'number', 'cannot write a non-number as a number');\n        assert(value >= 0, 'specified a negative value for writing an unsigned value');\n        assert(value <= max, 'value is larger than maximum value for type');\n        assert(Math.floor(value) === value, 'value has a fractional component');\n      }\n\n      function verifsint(value, max, min) {\n        assert(typeof value === 'number', 'cannot write a non-number as a number');\n        assert(value <= max, 'value larger than maximum allowed value');\n        assert(value >= min, 'value smaller than minimum allowed value');\n        assert(Math.floor(value) === value, 'value has a fractional component');\n      }\n\n      function verifIEEE754(value, max, min) {\n        assert(typeof value === 'number', 'cannot write a non-number as a number');\n        assert(value <= max, 'value larger than maximum allowed value');\n        assert(value >= min, 'value smaller than minimum allowed value');\n      }\n\n      function assert(test, message) {\n        if (!test) throw new Error(message || 'Failed assertion');\n      }\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/gulp-browserify/node_modules/buffer/index.js\", \"/../../node_modules/gulp-browserify/node_modules/buffer\");\n  }, { \"b55mWE\": 5, \"base64-js\": 3, \"buffer\": 4, \"ieee754\": 6 }], 5: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      // shim for using process in browser\n\n      var process = module.exports = {};\n\n      process.nextTick = function () {\n        var canSetImmediate = typeof window !== 'undefined' &&\n        window.setImmediate;\n        var canPost = typeof window !== 'undefined' &&\n        window.postMessage && window.addEventListener;\n\n\n        if (canSetImmediate) {\n          return function (f) {return window.setImmediate(f);};\n        }\n\n        if (canPost) {\n          var queue = [];\n          window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n              ev.stopPropagation();\n              if (queue.length > 0) {\n                var fn = queue.shift();\n                fn();\n              }\n            }\n          }, true);\n\n          return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n          };\n        }\n\n        return function nextTick(fn) {\n          setTimeout(fn, 0);\n        };\n      }();\n\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n\n      function noop() {}\n\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n\n      process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n      };\n\n      // TODO(shtylman)\n      process.cwd = function () {return '/';};\n      process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n      };\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/gulp-browserify/node_modules/process/browser.js\", \"/../../node_modules/gulp-browserify/node_modules/process\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }], 6: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n        var e, m;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var nBits = -7;\n        var i = isLE ? nBytes - 1 : 0;\n        var d = isLE ? -1 : 1;\n        var s = buffer[offset + i];\n\n        i += d;\n\n        e = s & (1 << -nBits) - 1;\n        s >>= -nBits;\n        nBits += eLen;\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n        m = e & (1 << -nBits) - 1;\n        e >>= -nBits;\n        nBits += mLen;\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n        if (e === 0) {\n          e = 1 - eBias;\n        } else if (e === eMax) {\n          return m ? NaN : (s ? -1 : 1) * Infinity;\n        } else {\n          m = m + Math.pow(2, mLen);\n          e = e - eBias;\n        }\n        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n      };\n\n      exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n        var e, m, c;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n        var i = isLE ? 0 : nBytes - 1;\n        var d = isLE ? 1 : -1;\n        var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\n        value = Math.abs(value);\n\n        if (isNaN(value) || value === Infinity) {\n          m = isNaN(value) ? 1 : 0;\n          e = eMax;\n        } else {\n          e = Math.floor(Math.log(value) / Math.LN2);\n          if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n          }\n          if (e + eBias >= 1) {\n            value += rt / c;\n          } else {\n            value += rt * Math.pow(2, 1 - eBias);\n          }\n          if (value * c >= 2) {\n            e++;\n            c /= 2;\n          }\n\n          if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n          } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n          } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n          }\n        }\n\n        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n        e = e << mLen | m;\n        eLen += mLen;\n        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n        buffer[offset + i - d] |= s * 128;\n      };\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/ieee754/index.js\", \"/../../node_modules/ieee754\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }] }, {}, [2]);\n//# sourceMappingURL=data:application/json;base64,\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n\nclass StateManager {\n\n  constructor(element) {\n    this.element = element;\n    this.state = 'init';\n    this.element.classList.add('state-' + this.state);\n  }\n\n  change(state) {\n    this.element.classList.remove('state-' + this.state);\n    this.state = state;\n    this.element.classList.add('state-' + this.state);\n  }\n}\n\nconst element = document.getElementById('js-state-manager');\nconst stateManager = new StateManager(element);\n\nmodule.exports = stateManager;\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app/state.js\",\"/app\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n// const BluetoothDevice = require('web-bluetooth');\n//\n// const pepe = () => {\n//   console.log(BluetoothDevice);\n// };\n// pepe();\n\nconst stateManager = require('./app/state.js');\n\nconst connectButton = document.getElementById('js-connect');\nconst disconnectButton = document.getElementById('js-disconnect');\n\nconnectButton.addEventListener('click', () => {\n  connectButton.disabled = true;\n  stateManager.change('connecting');\n  setTimeout(() => {\n    stateManager.change('connected');\n    connectButton.disabled = false;\n  },\n\t1000);\n});\n\ndisconnectButton.addEventListener('click', () => {\n  stateManager.change('init');\n});\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_b3d4d4f8.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/../../node_modules/gulp-browserify/node_modules/base64-js/lib\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = Buffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192\n\n/**\n * If `Buffer._useTypedArrays`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (compatible down to IE6)\n */\nBuffer._useTypedArrays = (function () {\n  // Detect if browser supports Typed Arrays. Supported browsers are IE 10+, Firefox 4+,\n  // Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+. If the browser does not support adding\n  // properties to `Uint8Array` instances, then that's the same as no `Uint8Array` support\n  // because we need to be able to add all the node Buffer API methods. This is an issue\n  // in Firefox 4-29. Now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() &&\n        typeof arr.subarray === 'function' // Chrome 9-10 lack `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Workaround: node's base64 implementation allows for non-padded strings\n  // while base64-js does not.\n  if (encoding === 'base64' && type === 'string') {\n    subject = stringtrim(subject)\n    while (subject.length % 4 !== 0) {\n      subject = subject + '='\n    }\n  }\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = coerce(subject)\n  else if (type === 'string')\n    length = Buffer.byteLength(subject, encoding)\n  else if (type === 'object')\n    length = coerce(subject.length) // assume that object is array-like\n  else\n    throw new Error('First argument needs to be a number, array or string.')\n\n  var buf\n  if (Buffer._useTypedArrays) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer._useTypedArrays && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    for (i = 0; i < length; i++) {\n      if (Buffer.isBuffer(subject))\n        buf[i] = subject.readUInt8(i)\n      else\n        buf[i] = subject[i]\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\n// STATIC METHODS\n// ==============\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b !== null && b !== undefined && b._isBuffer)\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'hex':\n      ret = str.length / 2\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.concat = function (list, totalLength) {\n  assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\\n' +\n      'list should be an Array.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (typeof totalLength !== 'number') {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\n// BUFFER INSTANCE METHODS\n// =======================\n\nfunction _hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  assert(strLen % 2 === 0, 'Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    assert(!isNaN(byte), 'Invalid hex string')\n    buf[offset + i] = byte\n  }\n  Buffer._charsWritten = i * 2\n  return i\n}\n\nfunction _utf8Write (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(utf8ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _asciiWrite (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _binaryWrite (buf, string, offset, length) {\n  return _asciiWrite(buf, string, offset, length)\n}\n\nfunction _base64Write (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _utf16leWrite (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(utf16leToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = _hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = _utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = _asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = _binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = _base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = _utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.prototype.toString = function (encoding, start, end) {\n  var self = this\n\n  encoding = String(encoding || 'utf8').toLowerCase()\n  start = Number(start) || 0\n  end = (end !== undefined)\n    ? Number(end)\n    : end = self.length\n\n  // Fastpath empty strings\n  if (end === start)\n    return ''\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = _hexSlice(self, start, end)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = _utf8Slice(self, start, end)\n      break\n    case 'ascii':\n      ret = _asciiSlice(self, start, end)\n      break\n    case 'binary':\n      ret = _binarySlice(self, start, end)\n      break\n    case 'base64':\n      ret = _base64Slice(self, start, end)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = _utf16leSlice(self, start, end)\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (!target_start) target_start = 0\n\n  // Copy 0 bytes; we're done\n  if (end === start) return\n  if (target.length === 0 || source.length === 0) return\n\n  // Fatal error conditions\n  assert(end >= start, 'sourceEnd < sourceStart')\n  assert(target_start >= 0 && target_start < target.length,\n      'targetStart out of bounds')\n  assert(start >= 0 && start < source.length, 'sourceStart out of bounds')\n  assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 100 || !Buffer._useTypedArrays) {\n    for (var i = 0; i < len; i++)\n      target[i + target_start] = this[i + start]\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n}\n\nfunction _base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction _utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction _asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++)\n    ret += String.fromCharCode(buf[i])\n  return ret\n}\n\nfunction _binarySlice (buf, start, end) {\n  return _asciiSlice(buf, start, end)\n}\n\nfunction _hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction _utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i+1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = clamp(start, len, 0)\n  end = clamp(end, len, len)\n\n  if (Buffer._useTypedArrays) {\n    return Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    var newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n    return newBuf\n  }\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert) {\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'Trying to read beyond buffer length')\n  }\n\n  if (offset >= this.length)\n    return\n\n  return this[offset]\n}\n\nfunction _readUInt16 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val\n  if (littleEndian) {\n    val = buf[offset]\n    if (offset + 1 < len)\n      val |= buf[offset + 1] << 8\n  } else {\n    val = buf[offset] << 8\n    if (offset + 1 < len)\n      val |= buf[offset + 1]\n  }\n  return val\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  return _readUInt16(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  return _readUInt16(this, offset, false, noAssert)\n}\n\nfunction _readUInt32 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val\n  if (littleEndian) {\n    if (offset + 2 < len)\n      val = buf[offset + 2] << 16\n    if (offset + 1 < len)\n      val |= buf[offset + 1] << 8\n    val |= buf[offset]\n    if (offset + 3 < len)\n      val = val + (buf[offset + 3] << 24 >>> 0)\n  } else {\n    if (offset + 1 < len)\n      val = buf[offset + 1] << 16\n    if (offset + 2 < len)\n      val |= buf[offset + 2] << 8\n    if (offset + 3 < len)\n      val |= buf[offset + 3]\n    val = val + (buf[offset] << 24 >>> 0)\n  }\n  return val\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  return _readUInt32(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  return _readUInt32(this, offset, false, noAssert)\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert) {\n    assert(offset !== undefined && offset !== null,\n        'missing offset')\n    assert(offset < this.length, 'Trying to read beyond buffer length')\n  }\n\n  if (offset >= this.length)\n    return\n\n  var neg = this[offset] & 0x80\n  if (neg)\n    return (0xff - this[offset] + 1) * -1\n  else\n    return this[offset]\n}\n\nfunction _readInt16 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val = _readUInt16(buf, offset, littleEndian, true)\n  var neg = val & 0x8000\n  if (neg)\n    return (0xffff - val + 1) * -1\n  else\n    return val\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  return _readInt16(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  return _readInt16(this, offset, false, noAssert)\n}\n\nfunction _readInt32 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val = _readUInt32(buf, offset, littleEndian, true)\n  var neg = val & 0x80000000\n  if (neg)\n    return (0xffffffff - val + 1) * -1\n  else\n    return val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  return _readInt32(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  return _readInt32(this, offset, false, noAssert)\n}\n\nfunction _readFloat (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  return ieee754.read(buf, offset, littleEndian, 23, 4)\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  return _readFloat(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  return _readFloat(this, offset, false, noAssert)\n}\n\nfunction _readDouble (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset + 7 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  return ieee754.read(buf, offset, littleEndian, 52, 8)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  return _readDouble(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  return _readDouble(this, offset, false, noAssert)\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xff)\n  }\n\n  if (offset >= this.length) return\n\n  this[offset] = value\n}\n\nfunction _writeUInt16 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xffff)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {\n    buf[offset + i] =\n        (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n            (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  _writeUInt16(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  _writeUInt16(this, value, offset, false, noAssert)\n}\n\nfunction _writeUInt32 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xffffffff)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {\n    buf[offset + i] =\n        (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  _writeUInt32(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  _writeUInt32(this, value, offset, false, noAssert)\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7f, -0x80)\n  }\n\n  if (offset >= this.length)\n    return\n\n  if (value >= 0)\n    this.writeUInt8(value, offset, noAssert)\n  else\n    this.writeUInt8(0xff + value + 1, offset, noAssert)\n}\n\nfunction _writeInt16 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7fff, -0x8000)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  if (value >= 0)\n    _writeUInt16(buf, value, offset, littleEndian, noAssert)\n  else\n    _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert)\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  _writeInt16(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  _writeInt16(this, value, offset, false, noAssert)\n}\n\nfunction _writeInt32 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7fffffff, -0x80000000)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  if (value >= 0)\n    _writeUInt32(buf, value, offset, littleEndian, noAssert)\n  else\n    _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert)\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  _writeInt32(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  _writeInt32(this, value, offset, false, noAssert)\n}\n\nfunction _writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')\n    verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  _writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  _writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction _writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 7 < buf.length,\n        'Trying to write beyond buffer length')\n    verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  _writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  _writeDouble(this, value, offset, false, noAssert)\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (typeof value === 'string') {\n    value = value.charCodeAt(0)\n  }\n\n  assert(typeof value === 'number' && !isNaN(value), 'value is not a number')\n  assert(end >= start, 'end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  assert(start >= 0 && start < this.length, 'start out of bounds')\n  assert(end >= 0 && end <= this.length, 'end out of bounds')\n\n  for (var i = start; i < end; i++) {\n    this[i] = value\n  }\n}\n\nBuffer.prototype.inspect = function () {\n  var out = []\n  var len = this.length\n  for (var i = 0; i < len; i++) {\n    out[i] = toHex(this[i])\n    if (i === exports.INSPECT_MAX_BYTES) {\n      out[i + 1] = '...'\n      break\n    }\n  }\n  return '<Buffer ' + out.join(' ') + '>'\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer._useTypedArrays) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1)\n        buf[i] = this[i]\n      return buf.buffer\n    }\n  } else {\n    throw new Error('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\n// slice(start, end)\nfunction clamp (index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue\n  index = ~~index;  // Coerce to integer.\n  if (index >= len) return len\n  if (index >= 0) return index\n  index += len\n  if (index >= 0) return index\n  return 0\n}\n\nfunction coerce (length) {\n  // Coerce length to a number (possibly NaN), round up\n  // in case it's fractional (e.g. 123.456) then do a\n  // double negate to coerce a NaN to 0. Easy, right?\n  length = ~~Math.ceil(+length)\n  return length < 0 ? 0 : length\n}\n\nfunction isArray (subject) {\n  return (Array.isArray || function (subject) {\n    return Object.prototype.toString.call(subject) === '[object Array]'\n  })(subject)\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    var b = str.charCodeAt(i)\n    if (b <= 0x7F)\n      byteArray.push(str.charCodeAt(i))\n    else {\n      var start = i\n      if (b >= 0xD800 && b <= 0xDFFF) i++\n      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')\n      for (var j = 0; j < h.length; j++)\n        byteArray.push(parseInt(h[j], 16))\n    }\n  }\n  return byteArray\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(str)\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  var pos\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n/*\n * We have to make sure that the value is a valid integer. This means that it\n * is non-negative. It has no fractional component and that it does not\n * exceed the maximum allowed value.\n */\nfunction verifuint (value, max) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value >= 0, 'specified a negative value for writing an unsigned value')\n  assert(value <= max, 'value is larger than maximum value for type')\n  assert(Math.floor(value) === value, 'value has a fractional component')\n}\n\nfunction verifsint (value, max, min) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value <= max, 'value larger than maximum allowed value')\n  assert(value >= min, 'value smaller than minimum allowed value')\n  assert(Math.floor(value) === value, 'value has a fractional component')\n}\n\nfunction verifIEEE754 (value, max, min) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value <= max, 'value larger than maximum allowed value')\n  assert(value >= min, 'value smaller than minimum allowed value')\n}\n\nfunction assert (test, message) {\n  if (!test) throw new Error(message || 'Failed assertion')\n}\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/../../node_modules/gulp-browserify/node_modules/buffer\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/gulp-browserify/node_modules/process/browser.js\",\"/../../node_modules/gulp-browserify/node_modules/process\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/ieee754/index.js\",\"/../../node_modules/ieee754\")","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})"],"sourceRoot":"/source/"}
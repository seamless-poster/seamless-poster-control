{"version":3,"sources":["main.min.js","/source/main.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/app/scripts/app/device.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/app/scripts/fake_e5f40b29.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/buffer/index.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/process/browser.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/ieee754/index.js","/Users/j.vallelunga/Workspaces/tesis/seamless-poster-control/node_modules/gulp-browserify/node_modules/browser-pack/_prelude.js"],"names":["_classCallCheck","instance","Constructor","TypeError","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","t","n","r","s","o","u","a","require","f","exports","call","1","module","process","global","Buffer","__argument0","__argument1","__argument2","__argument3","__filename","__dirname","PosterDevice","this","device","onDisconnected","bind","value","_this","log","options","filters","name","bluetooth","requestDevice","addEventListener","gatt","connect","Promise","reject","data","getPrimaryService","service","getCharacteristic","characteristic","writeValue","disconnect","posterDevice","self","arguments","b55mWE","buffer","2","blue","connectButton","document","getElementById","okButton","request","writeColor","getValue","./app/device.js","3","lookup","decode","elt","code","charCodeAt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","push","v","arr","L","j","l","tmp","placeHolders","len","charAt","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","output","Uint8Array","Array","toByteArray","fromByteArray","base64js","4","subject","encoding","noZero","type","stringtrim","coerce","byteLength","buf","_useTypedArrays","_augment","_isBuffer","_set","isArrayish","isBuffer","readUInt8","write","_hexWrite","string","offset","Number","remaining","strLen","assert","byte","parseInt","substr","isNaN","_charsWritten","_utf8Write","charsWritten","blitBuffer","utf8ToBytes","_asciiWrite","asciiToBytes","_binaryWrite","_base64Write","base64ToBytes","_utf16leWrite","utf16leToBytes","_base64Slice","start","end","base64","slice","_utf8Slice","res","Math","min","decodeUtf8Char","String","fromCharCode","toString","_asciiSlice","ret","_binarySlice","_hexSlice","out","toHex","_utf16leSlice","bytes","_readUInt16","littleEndian","noAssert","undefined","val","_readUInt32","_readInt16","neg","_readInt32","_readFloat","ieee754","read","_readDouble","_writeUInt16","verifuint","_writeUInt32","_writeInt16","verifsint","_writeInt32","_writeFloat","verifIEEE754","_writeDouble","str","trim","replace","clamp","index","defaultValue","ceil","isArray","byteArray","b","h","encodeURIComponent","split","c","hi","lo","src","dst","decodeURIComponent","err","max","floor","test","message","SlowBuffer","INSPECT_MAX_BYTES","poolSize","ArrayBuffer","foo","subarray","isEncoding","toLowerCase","concat","list","totalLength","pos","item","copy","isFinite","swap","toJSON","_arr","target_start","source","sliceLen","newBuf","get","set","writeUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","fill","inspect","join","toArrayBuffer","BP","_get","toLocaleString","base64-js","5","noop","nextTick","canSetImmediate","setImmediate","canPost","postMessage","queue","ev","stopPropagation","fn","shift","setTimeout","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","6","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","rt","abs","LN2"],"mappings":"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AA,aACAqK,EAAArK,EACA,UACAE,GAAAM,OAAAA,EACAN,EAAAuM,WAAAjM,EACAN,EAAAwM,kBAAA,GACAlM,EAAAmM,SACA,KAMAnM,EAAA+F,gBAAA,WL8XQ,IACE,GAAID,GAAM,GAAIsG,aKvXxB,GLwXcpI,EAAM,GAAIiB,YKvXxBa,ELyXU,OADA9B,GAAIqI,IAAM,WAAa,MAAO,KACvB,KAAOrI,EKvXxBqI,OLwXkC,kBAAjBrI,GAAIsI,SACX,MAAO7O,GACP,OKvXV,MA8EAuC,EAAAuM,WAAA,SAAA/G,GLyXQ,OAAQgD,OAAOhD,GKvXvBgH,eLwXU,IKvXV,MLwXU,IKvXV,OLwXU,IKvXV,QLwXU,IKvXV,QLwXU,IKvXV,SLwXU,IKvXV,SLwXU,IKvXV,MLwXU,IKvXV,OLwXU,IKvXV,QLwXU,IKvXV,ULwXU,IKvXV,WLwXY,OKvXZ,CACA,SLwXY,OKvXZ,IAGAxM,EAAAoG,SAAA,SAAA8E,GLyXQ,QAAgB,OAANA,GAAoB5B,SAAN4B,IAAmBA,EKvXnDjF,YAEAjG,EAAA6F,WAAA,SAAA4E,EAAAjF,GLyXQ,GKvXRoD,ELyXQ,QADA6B,GKvXR,GLwXgBjF,GKvXhB,QLwXU,IKvXV,MLwXYoD,EAAM6B,EAAInM,OKvXtB,CACA,MLwXU,KKvXV,OLwXU,IKvXV,QLwXYsK,EAAMtB,EAAYmD,GKvX9BnM,MACA,MLwXU,KKvXV,QLwXU,IKvXV,SLwXU,IKvXV,MLwXYsK,EAAM6B,EKvXlBnM,MACA,MLwXU,KKvXV,SLwXYsK,EAAMjB,EAAc8C,GKvXhCnM,MACA,MLwXU,KKvXV,OLwXU,IKvXV,QLwXU,IKvXV,ULwXU,IKvXV,WLwXYsK,EKvXZ,ELuXkB6B,EAAInM,MKtXtB,MACA,SLwXY,KAAM,IAAId,OKvXtB,oBLyXQ,MKvXRoL,IAEA5I,EAAAyM,OAAA,SAAAC,EAAAC,GL4XQ,GAHA9F,EAAOmE,EAAQ0B,GKvXvB,uEL0X4B,IAAhBA,EAAKpO,OACP,MAAO,IAAI0B,GKvXrB,ELwXe,IAAoB,IAAhB0M,EAAKpO,OACd,MAAOoO,GKvXjB,EL0XQ,IKvXRrO,ELwXQ,IAA2B,gBAAhBsO,G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A,GAAIiC,WKvXZ,EL0XQjC,EAAIyL,KAAOzL,EKvXnBuJ,ILwXQvJ,EAAIkC,KAAOlC,EKvXnBwJ,IL0XQxJ,EAAIuJ,IAAMiC,EKvXlBjC,ILwXQvJ,EAAIwJ,IAAMgC,EKvXlBhC,ILyXQxJ,EAAIsC,MAAQkJ,EKvXpBlJ,MLwXQtC,EAAI0E,SAAW8G,EKvXvB9G,SLwXQ1E,EAAI0L,eAAiBF,EKvX7B9G,SLwXQ1E,EAAIiJ,OAASuC,EKvXrBvC,OLwXQjJ,EAAI8I,KAAO0C,EKvXnB1C,KLwXQ9I,EAAIkE,MAAQsH,EKvXpBtH,MLwXQlE,EAAIqC,UAAYmJ,EKvXxBnJ,ULwXQrC,EAAI0J,aAAe8B,EKvX3B9B,aLwXQ1J,EAAI2J,aAAe6B,EKvX3B7B,aLwXQ3J,EAAI4J,aAAe4B,EKvX3B5B,aLwXQ5J,EAAI6J,aAAe2B,EKvX3B3B,aLwXQ7J,EAAI8J,SAAW0B,EKvXvB1B,SLwXQ9J,EAAI+J,YAAcyB,EKvX1BzB,YLwXQ/J,EAAIgK,YAAcwB,EKvX1BxB,YLwXQhK,EAAIiK,YAAcuB,EKvX1BvB,YLwXQjK,EAAIkK,YAAcsB,EKvX1BtB,YLwXQlK,EAAImK,YAAcqB,EKvX1BrB,YLwXQnK,EAAIoK,YAAcoB,EKvX1BpB,YLwXQpK,EAAIqK,aAAemB,EKvX3BnB,aLwXQrK,EAAIsK,aAAekB,EKvX3BlB,aLwXQtK,EAAIyJ,WAAa+B,EKvXzB/B,WLwXQzJ,EAAIuK,cAAgBiB,EKvX5BjB,cLwXQvK,EAAIwK,cAAgBgB,EKvX5BhB,cLwXQxK,EAAIyK,cAAgBe,EKvX5Bf,cLwXQzK,EAAI0K,cAAgBc,EKvX5Bd,cLwXQ1K,EAAI2K,UAAYa,EKvXxBb,ULwXQ3K,EAAI4K,aAAeY,EKvX3BZ,aLwXQ5K,EAAI6K,aAAeW,EKvX3BX,aLwXQ7K,EAAI8K,aAAeU,EKvX3BV,aLwXQ9K,EAAI+K,aAAeS,EKvX3BT,aLwXQ/K,EAAIgL,aAAeQ,EKvX3BR,aLwXQhL,EAAIiL,aAAeO,EKvX3BP,aLwXQjL,EAAIkL,cAAgBM,EKvX5BN,cLwXQlL,EAAImL,cAAgBK,EKvX5BL,cLwXQnL,EAAIoL,KAAOI,EK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","file":"main.min.js","sourcesContent":["'use strict'; /*!\n               *\n               *  Web Starter Kit\n               *  Copyright 2015 Google Inc. All rights reserved.\n               *\n               *  Licensed under the Apache License, Version 2.0 (the \"License\");\n               *  you may not use this file except in compliance with the License.\n               *  You may obtain a copy of the License at\n               *\n               *    https://www.apache.org/licenses/LICENSE-2.0\n               *\n               *  Unless required by applicable law or agreed to in writing, software\n               *  distributed under the License is distributed on an \"AS IS\" BASIS,\n               *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n               *  See the License for the specific language governing permissions and\n               *  limitations under the License\n               *\n               */\n/* eslint-env browser */\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\n\n\n  if ('serviceWorker' in navigator && (\n  window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js').\n    then(function (registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function () {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function () {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                'service worker became redundant.');\n\n              default:\n              // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function (e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiaXNMb2NhbGhvc3QiLCJCb29sZWFuIiwid2luZG93IiwibG9jYXRpb24iLCJob3N0bmFtZSIsIm1hdGNoIiwibmF2aWdhdG9yIiwicHJvdG9jb2wiLCJzZXJ2aWNlV29ya2VyIiwicmVnaXN0ZXIiLCJ0aGVuIiwicmVnaXN0cmF0aW9uIiwib251cGRhdGVmb3VuZCIsImNvbnRyb2xsZXIiLCJpbnN0YWxsaW5nV29ya2VyIiwiaW5zdGFsbGluZyIsIm9uc3RhdGVjaGFuZ2UiLCJzdGF0ZSIsIkVycm9yIiwiY2F0Y2giLCJlIiwiY29uc29sZSIsImVycm9yIl0sIm1hcHBpbmdzIjoiY0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBO0FBQ0EsQ0FBQyxZQUFXO0FBQ1Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFJQSxjQUFjQyxRQUFRQyxPQUFPQyxRQUFQLENBQWdCQyxRQUFoQixLQUE2QixXQUE3QjtBQUN0QjtBQUNBRixTQUFPQyxRQUFQLENBQWdCQyxRQUFoQixLQUE2QixPQUZQO0FBR3RCO0FBQ0FGLFNBQU9DLFFBQVAsQ0FBZ0JDLFFBQWhCLENBQXlCQyxLQUF6QjtBQUNFLDBEQURGLENBSmMsQ0FBbEI7Ozs7QUFTQSxNQUFJLG1CQUFtQkMsU0FBbkI7QUFDQ0osU0FBT0MsUUFBUCxDQUFnQkksUUFBaEIsS0FBNkIsUUFBN0IsSUFBeUNQLFdBRDFDLENBQUosRUFDNEQ7QUFDMURNLGNBQVVFLGFBQVYsQ0FBd0JDLFFBQXhCLENBQWlDLG1CQUFqQztBQUNDQyxRQURELENBQ00sVUFBU0MsWUFBVCxFQUF1QjtBQUMzQjtBQUNBQSxtQkFBYUMsYUFBYixHQUE2QixZQUFXO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBSU4sVUFBVUUsYUFBVixDQUF3QkssVUFBNUIsRUFBd0M7QUFDdEM7QUFDQTtBQUNBLGNBQUlDLG1CQUFtQkgsYUFBYUksVUFBcEM7O0FBRUFELDJCQUFpQkUsYUFBakIsR0FBaUMsWUFBVztBQUMxQyxvQkFBUUYsaUJBQWlCRyxLQUF6QjtBQUNFLG1CQUFLLFdBQUw7QUFDRTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVGLG1CQUFLLFdBQUw7QUFDRSxzQkFBTSxJQUFJQyxLQUFKLENBQVU7QUFDQSxrREFEVixDQUFOOztBQUdGO0FBQ0U7QUFiSjtBQWVELFdBaEJEO0FBaUJEO0FBQ0YsT0E1QkQ7QUE2QkQsS0FoQ0QsRUFnQ0dDLEtBaENILENBZ0NTLFVBQVNDLENBQVQsRUFBWTtBQUNuQkMsY0FBUUMsS0FBUixDQUFjLDJDQUFkLEVBQTJERixDQUEzRDtBQUNELEtBbENEO0FBbUNEOztBQUVEO0FBQ0QsQ0F4REQiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICpcbiAqICBXZWIgU3RhcnRlciBLaXRcbiAqICBDb3B5cmlnaHQgMjAxNSBHb29nbGUgSW5jLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICpcbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlXG4gKlxuICovXG4vKiBlc2xpbnQtZW52IGJyb3dzZXIgKi9cbihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENoZWNrIHRvIG1ha2Ugc3VyZSBzZXJ2aWNlIHdvcmtlcnMgYXJlIHN1cHBvcnRlZCBpbiB0aGUgY3VycmVudCBicm93c2VyLFxuICAvLyBhbmQgdGhhdCB0aGUgY3VycmVudCBwYWdlIGlzIGFjY2Vzc2VkIGZyb20gYSBzZWN1cmUgb3JpZ2luLiBVc2luZyBhXG4gIC8vIHNlcnZpY2Ugd29ya2VyIGZyb20gYW4gaW5zZWN1cmUgb3JpZ2luIHdpbGwgdHJpZ2dlciBKUyBjb25zb2xlIGVycm9ycy4gU2VlXG4gIC8vIGh0dHA6Ly93d3cuY2hyb21pdW0ub3JnL0hvbWUvY2hyb21pdW0tc2VjdXJpdHkvcHJlZmVyLXNlY3VyZS1vcmlnaW5zLWZvci1wb3dlcmZ1bC1uZXctZmVhdHVyZXNcbiAgdmFyIGlzTG9jYWxob3N0ID0gQm9vbGVhbih3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgPT09ICdsb2NhbGhvc3QnIHx8XG4gICAgICAvLyBbOjoxXSBpcyB0aGUgSVB2NiBsb2NhbGhvc3QgYWRkcmVzcy5cbiAgICAgIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSA9PT0gJ1s6OjFdJyB8fFxuICAgICAgLy8gMTI3LjAuMC4xLzggaXMgY29uc2lkZXJlZCBsb2NhbGhvc3QgZm9yIElQdjQuXG4gICAgICB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUubWF0Y2goXG4gICAgICAgIC9eMTI3KD86XFwuKD86MjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/KSl7M30kL1xuICAgICAgKVxuICAgICk7XG5cbiAgaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IgJiZcbiAgICAgICh3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgPT09ICdodHRwczonIHx8IGlzTG9jYWxob3N0KSkge1xuICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKCdzZXJ2aWNlLXdvcmtlci5qcycpXG4gICAgLnRoZW4oZnVuY3Rpb24ocmVnaXN0cmF0aW9uKSB7XG4gICAgICAvLyB1cGRhdGVmb3VuZCBpcyBmaXJlZCBpZiBzZXJ2aWNlLXdvcmtlci5qcyBjaGFuZ2VzLlxuICAgICAgcmVnaXN0cmF0aW9uLm9udXBkYXRlZm91bmQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gdXBkYXRlZm91bmQgaXMgYWxzbyBmaXJlZCB0aGUgdmVyeSBmaXJzdCB0aW1lIHRoZSBTVyBpcyBpbnN0YWxsZWQsXG4gICAgICAgIC8vIGFuZCB0aGVyZSdzIG5vIG5lZWQgdG8gcHJvbXB0IGZvciBhIHJlbG9hZCBhdCB0aGF0IHBvaW50LlxuICAgICAgICAvLyBTbyBjaGVjayBoZXJlIHRvIHNlZSBpZiB0aGUgcGFnZSBpcyBhbHJlYWR5IGNvbnRyb2xsZWQsXG4gICAgICAgIC8vIGkuZS4gd2hldGhlciB0aGVyZSdzIGFuIGV4aXN0aW5nIHNlcnZpY2Ugd29ya2VyLlxuICAgICAgICBpZiAobmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlcikge1xuICAgICAgICAgIC8vIFRoZSB1cGRhdGVmb3VuZCBldmVudCBpbXBsaWVzIHRoYXQgcmVnaXN0cmF0aW9uLmluc3RhbGxpbmcgaXMgc2V0OlxuICAgICAgICAgIC8vIGh0dHBzOi8vc2xpZ2h0bHlvZmYuZ2l0aHViLmlvL1NlcnZpY2VXb3JrZXIvc3BlYy9zZXJ2aWNlX3dvcmtlci9pbmRleC5odG1sI3NlcnZpY2Utd29ya2VyLWNvbnRhaW5lci11cGRhdGVmb3VuZC1ldmVudFxuICAgICAgICAgIHZhciBpbnN0YWxsaW5nV29ya2VyID0gcmVnaXN0cmF0aW9uLmluc3RhbGxpbmc7XG5cbiAgICAgICAgICBpbnN0YWxsaW5nV29ya2VyLm9uc3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoaW5zdGFsbGluZ1dvcmtlci5zdGF0ZSkge1xuICAgICAgICAgICAgICBjYXNlICdpbnN0YWxsZWQnOlxuICAgICAgICAgICAgICAgIC8vIEF0IHRoaXMgcG9pbnQsIHRoZSBvbGQgY29udGVudCB3aWxsIGhhdmUgYmVlbiBwdXJnZWQgYW5kIHRoZVxuICAgICAgICAgICAgICAgIC8vIGZyZXNoIGNvbnRlbnQgd2lsbCBoYXZlIGJlZW4gYWRkZWQgdG8gdGhlIGNhY2hlLlxuICAgICAgICAgICAgICAgIC8vIEl0J3MgdGhlIHBlcmZlY3QgdGltZSB0byBkaXNwbGF5IGEgXCJOZXcgY29udGVudCBpc1xuICAgICAgICAgICAgICAgIC8vIGF2YWlsYWJsZTsgcGxlYXNlIHJlZnJlc2guXCIgbWVzc2FnZSBpbiB0aGUgcGFnZSdzIGludGVyZmFjZS5cbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlICdyZWR1bmRhbnQnOlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIGluc3RhbGxpbmcgJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzZXJ2aWNlIHdvcmtlciBiZWNhbWUgcmVkdW5kYW50LicpO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgLy8gSWdub3JlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9KS5jYXRjaChmdW5jdGlvbihlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkdXJpbmcgc2VydmljZSB3b3JrZXIgcmVnaXN0cmF0aW9uOicsIGUpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8gWW91ciBjdXN0b20gSmF2YVNjcmlwdCBnb2VzIGhlcmVcbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=\n\n\"use strict\";var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;};var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}(function e(t, n, r) {function s(o, u) {if (!n[o]) {if (!t[o]) {var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);throw new Error(\"Cannot find module '\" + o + \"'\");}var f = n[o] = { exports: {} };t[o][0].call(f.exports, function (e) {var n = t[o][1][e];return s(n ? n : e);}, f, f.exports, e, t, n, r);}return n[o].exports;}var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {s(r[o]);}return s;})({ 1: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {var\n      PosterDevice = function () {\n\n        function PosterDevice() {_classCallCheck(this, PosterDevice);\n          this.device = null;\n          this.onDisconnected = this.onDisconnected.bind(this);\n        }_createClass(PosterDevice, [{ key: \"request\", value: function request()\n\n          {var _this = this;\n            console.log('request');\n            var options = {\n              filters: [{\n                name: 'test' }] };\n\n\n            return navigator.bluetooth.requestDevice(options).\n            then(function (device) {\n              _this.device = device;\n              _this.device.addEventListener('gattserverdisconnected', _this.onDisconnected);\n              return device;\n            });\n          } }, { key: \"connect\", value: function connect()\n\n          {\n            console.log('connect');\n            if (this.device) {\n              return this.device.gatt.connect();\n            }\n            return Promise.reject('Device is not connected.');\n          } }, { key: \"writeColor\", value: function writeColor(\n\n          data) {\n            console.log('writeColor');\n            return this.device.gatt.getPrimaryService(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0).\n            then(function (service) {return service.getCharacteristic(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4);}).\n            then(function (characteristic) {return characteristic.writeValue(data);});\n          } }, { key: \"disconnect\", value: function disconnect()\n\n          {\n            console.log('disconnect');\n            if (this.device) {\n              return this.device.gatt.disconnect();\n            }\n            return Promise.reject('Device is not connected.');\n          } }, { key: \"onDisconnected\", value: function onDisconnected()\n\n          {\n            console.log('onDisconnected');\n            console.log('Device is disconnected.');\n          } }]);return PosterDevice;}();\n\n\n      var posterDevice = new PosterDevice();\n      module.exports = posterDevice;\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/app/device.js\", \"/app\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }], 2: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      // const BluetoothDevice = require('web-bluetooth');\n      // const stateManager = require('./app/state.js');\n      var posterDevice = require('./app/device.js');\n\n      // const service = '1ecce4f2-7f9e-11e6-ae22-56b6b6499611';\n      var characteristic = '488d7950-7f9e-11e6-ae22-56b6b6499611';\n\n      // const filter = {\n      //   name: 'MyDevice',\n      //   service: [service]\n      // };\n      var blue = void 0;\n\n      var connectButton = document.getElementById('js-connect');\n      // const disconnectButton = document.getElementById('js-disconnect');\n\n      var okButton = document.getElementById('js-ok');\n\n      // connectButton.addEventListener('click', () => {\n      //   connectButton.disabled = true;\n      //   stateManager.change('connecting');\n      //\n      //   blue = new BluetoothDevice(filter);\n      //   blue.connect()\n      //     .then(device => {\n      //       console.log(device);\n      //       stateManager.change('connected');\n      //       connectButton.disabled = false;\n      //     })\n      //     .catch(error => {\n      //       console.log(error);\n      //       stateManager.change('init');\n      //       connectButton.disabled = false;\n      //     });\n      // });\n      //\n      // disconnectButton.addEventListener('click', () => {\n      //   if (blue.disconnect()) {\n      //     stateManager.change('init');\n      //   } else {\n      //     console.log('error while disconnect');\n      //   }\n      // });\n\n      connectButton.addEventListener('click', function () {\n        posterDevice.request().\n        then(function () {return posterDevice.connect();}).\n        then(function () {\n          posterDevice.writeColor('001122');\n        }).\n        catch(function (error) {\n          console.log(error);\n        });\n      });\n      // connectButton.addEventListener('click', () => {\n      //   console.log('Requesting Bluetooth Device...');\n      //   navigator.bluetooth.requestDevice({\n      //     filters: [{services: [service]}]\n      //   })\n      //   .then(device => {\n      //     console.log('Connecting to GATT Server...');\n      //     return device.gatt.connect();\n      //   })\n      //   .then(server => {\n      //     console.log('Getting Service...');\n      //     return server.getPrimaryService(service);\n      //   })\n      //   .then(service => {\n      //     console.log('Getting Characteristics...');\n      //     // if (characteristic) {\n      //     //   // Get all characteristics that match this UUID.\n      //     //   return service.getCharacteristics(characteristic);\n      //     // }\n      //     // Get all characteristics.\n      //     return service.getCharacteristic(characteristic);\n      //     // return service.getCharacteristics();\n      //   })\n      //   .then(characteristics => {\n      //     // console.log('> Characteristics: ' +\n      //     //   characteristics.map(c => c.uuid).join('\\n' + ' '.repeat(19)));\n      //\n      //     return characteristics[0].readValue();\n      //   })\n      //   .then(value => {\n      //     console.log('Battery percentage is ' + value.getUint8(0));\n      //   })\n      //   .catch(error => {\n      //     console.log('Argh! ' + error);\n      //   });\n      // });\n\n      okButton.addEventListener('click', function () {\n        console.log('read: ' + characteristic);\n        blue.getValue(characteristic).\n        then(function (value) {\n          console.log(value);\n        });\n        // console.log('write: 026683da-7f8b-11e6-ae22-56b6b6499611');\n        // blue.writeValue('026683da-7f8b-11e6-ae22-56b6b6499611', 'ok')\n        //   .then(writeSuccess => {\n        //     console.log(writeSuccess);\n        //   })\n        //   .catch(error => {\n        //     console.log(error);\n        //   });\n      });\n\n      console.log('3');\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/fake_e5f40b29.js\", \"/\");\n  }, { \"./app/device.js\": 1, \"b55mWE\": 5, \"buffer\": 4 }], 3: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n      ;(function (exports) {\n        'use strict';\n\n        var Arr = typeof Uint8Array !== 'undefined' ?\n        Uint8Array :\n        Array;\n\n        var PLUS = '+'.charCodeAt(0);\n        var SLASH = '/'.charCodeAt(0);\n        var NUMBER = '0'.charCodeAt(0);\n        var LOWER = 'a'.charCodeAt(0);\n        var UPPER = 'A'.charCodeAt(0);\n        var PLUS_URL_SAFE = '-'.charCodeAt(0);\n        var SLASH_URL_SAFE = '_'.charCodeAt(0);\n\n        function decode(elt) {\n          var code = elt.charCodeAt(0);\n          if (code === PLUS ||\n          code === PLUS_URL_SAFE)\n          return 62; // '+'\n          if (code === SLASH ||\n          code === SLASH_URL_SAFE)\n          return 63; // '/'\n          if (code < NUMBER)\n          return -1; //no match\n          if (code < NUMBER + 10)\n          return code - NUMBER + 26 + 26;\n          if (code < UPPER + 26)\n          return code - UPPER;\n          if (code < LOWER + 26)\n          return code - LOWER + 26;\n        }\n\n        function b64ToByteArray(b64) {\n          var i, j, l, tmp, placeHolders, arr;\n\n          if (b64.length % 4 > 0) {\n            throw new Error('Invalid string. Length must be a multiple of 4');\n          }\n\n          // the number of equal signs (place holders)\n          // if there are two placeholders, than the two characters before it\n          // represent one byte\n          // if there is only one, then the three characters before it represent 2 bytes\n          // this is just a cheap hack to not do indexOf twice\n          var len = b64.length;\n          placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0;\n\n          // base64 is 4/3 + up to two characters of the original data\n          arr = new Arr(b64.length * 3 / 4 - placeHolders);\n\n          // if there are placeholders, only get up to the last complete 4 chars\n          l = placeHolders > 0 ? b64.length - 4 : b64.length;\n\n          var L = 0;\n\n          function push(v) {\n            arr[L++] = v;\n          }\n\n          for (i = 0, j = 0; i < l; i += 4, j += 3) {\n            tmp = decode(b64.charAt(i)) << 18 | decode(b64.charAt(i + 1)) << 12 | decode(b64.charAt(i + 2)) << 6 | decode(b64.charAt(i + 3));\n            push((tmp & 0xFF0000) >> 16);\n            push((tmp & 0xFF00) >> 8);\n            push(tmp & 0xFF);\n          }\n\n          if (placeHolders === 2) {\n            tmp = decode(b64.charAt(i)) << 2 | decode(b64.charAt(i + 1)) >> 4;\n            push(tmp & 0xFF);\n          } else if (placeHolders === 1) {\n            tmp = decode(b64.charAt(i)) << 10 | decode(b64.charAt(i + 1)) << 4 | decode(b64.charAt(i + 2)) >> 2;\n            push(tmp >> 8 & 0xFF);\n            push(tmp & 0xFF);\n          }\n\n          return arr;\n        }\n\n        function uint8ToBase64(uint8) {\n          var i,\n          extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n          output = \"\",\n          temp,length;\n\n          function encode(num) {\n            return lookup.charAt(num);\n          }\n\n          function tripletToBase64(num) {\n            return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F);\n          }\n\n          // go through the array every three bytes, we'll deal with trailing stuff later\n          for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n            temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2];\n            output += tripletToBase64(temp);\n          }\n\n          // pad the end with zeros, but make sure to not forget the extra bytes\n          switch (extraBytes) {\n            case 1:\n              temp = uint8[uint8.length - 1];\n              output += encode(temp >> 2);\n              output += encode(temp << 4 & 0x3F);\n              output += '==';\n              break;\n            case 2:\n              temp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];\n              output += encode(temp >> 10);\n              output += encode(temp >> 4 & 0x3F);\n              output += encode(temp << 2 & 0x3F);\n              output += '=';\n              break;}\n\n\n          return output;\n        }\n\n        exports.toByteArray = b64ToByteArray;\n        exports.fromByteArray = uint8ToBase64;\n      })(typeof exports === 'undefined' ? this.base64js = {} : exports);\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\", \"/../../node_modules/gulp-browserify/node_modules/base64-js/lib\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }], 4: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      /*!\n                                                                                                                     * The buffer module from node.js, for the browser.\n                                                                                                                     *\n                                                                                                                     * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n                                                                                                                     * @license  MIT\n                                                                                                                     */\n\n      var base64 = require('base64-js');\n      var ieee754 = require('ieee754');\n\n      exports.Buffer = Buffer;\n      exports.SlowBuffer = Buffer;\n      exports.INSPECT_MAX_BYTES = 50;\n      Buffer.poolSize = 8192;\n\n      /**\n                               * If `Buffer._useTypedArrays`:\n                               *   === true    Use Uint8Array implementation (fastest)\n                               *   === false   Use Object implementation (compatible down to IE6)\n                               */\n      Buffer._useTypedArrays = function () {\n        // Detect if browser supports Typed Arrays. Supported browsers are IE 10+, Firefox 4+,\n        // Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+. If the browser does not support adding\n        // properties to `Uint8Array` instances, then that's the same as no `Uint8Array` support\n        // because we need to be able to add all the node Buffer API methods. This is an issue\n        // in Firefox 4-29. Now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438\n        try {\n          var buf = new ArrayBuffer(0);\n          var arr = new Uint8Array(buf);\n          arr.foo = function () {return 42;};\n          return 42 === arr.foo() &&\n          typeof arr.subarray === 'function'; // Chrome 9-10 lack `subarray`\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      /**\n            * Class: Buffer\n            * =============\n            *\n            * The Buffer constructor returns instances of `Uint8Array` that are augmented\n            * with function properties for all the node `Buffer` API functions. We use\n            * `Uint8Array` so that square bracket notation works as expected -- it returns\n            * a single octet.\n            *\n            * By augmenting the instances, we can avoid modifying the `Uint8Array`\n            * prototype.\n            */\n      function Buffer(subject, encoding, noZero) {\n        if (!(this instanceof Buffer))\n        return new Buffer(subject, encoding, noZero);\n\n        var type = typeof subject === \"undefined\" ? \"undefined\" : _typeof(subject);\n\n        // Workaround: node's base64 implementation allows for non-padded strings\n        // while base64-js does not.\n        if (encoding === 'base64' && type === 'string') {\n          subject = stringtrim(subject);\n          while (subject.length % 4 !== 0) {\n            subject = subject + '=';\n          }\n        }\n\n        // Find the length\n        var length;\n        if (type === 'number')\n        length = coerce(subject);else\n        if (type === 'string')\n        length = Buffer.byteLength(subject, encoding);else\n        if (type === 'object')\n        length = coerce(subject.length); // assume that object is array-like\n        else\n          throw new Error('First argument needs to be a number, array or string.');\n\n        var buf;\n        if (Buffer._useTypedArrays) {\n          // Preferred: Return an augmented `Uint8Array` instance for best performance\n          buf = Buffer._augment(new Uint8Array(length));\n        } else {\n          // Fallback: Return THIS instance of Buffer (created by `new`)\n          buf = this;\n          buf.length = length;\n          buf._isBuffer = true;\n        }\n\n        var i;\n        if (Buffer._useTypedArrays && typeof subject.byteLength === 'number') {\n          // Speed optimization -- use set if we're copying from a typed array\n          buf._set(subject);\n        } else if (isArrayish(subject)) {\n          // Treat array-ish objects as a byte array\n          for (i = 0; i < length; i++) {\n            if (Buffer.isBuffer(subject))\n            buf[i] = subject.readUInt8(i);else\n\n            buf[i] = subject[i];\n          }\n        } else if (type === 'string') {\n          buf.write(subject, 0, encoding);\n        } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {\n          for (i = 0; i < length; i++) {\n            buf[i] = 0;\n          }\n        }\n\n        return buf;\n      }\n\n      // STATIC METHODS\n      // ==============\n\n      Buffer.isEncoding = function (encoding) {\n        switch (String(encoding).toLowerCase()) {\n          case 'hex':\n          case 'utf8':\n          case 'utf-8':\n          case 'ascii':\n          case 'binary':\n          case 'base64':\n          case 'raw':\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return true;\n          default:\n            return false;}\n\n      };\n\n      Buffer.isBuffer = function (b) {\n        return !!(b !== null && b !== undefined && b._isBuffer);\n      };\n\n      Buffer.byteLength = function (str, encoding) {\n        var ret;\n        str = str + '';\n        switch (encoding || 'utf8') {\n          case 'hex':\n            ret = str.length / 2;\n            break;\n          case 'utf8':\n          case 'utf-8':\n            ret = utf8ToBytes(str).length;\n            break;\n          case 'ascii':\n          case 'binary':\n          case 'raw':\n            ret = str.length;\n            break;\n          case 'base64':\n            ret = base64ToBytes(str).length;\n            break;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            ret = str.length * 2;\n            break;\n          default:\n            throw new Error('Unknown encoding');}\n\n        return ret;\n      };\n\n      Buffer.concat = function (list, totalLength) {\n        assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\\n' +\n        'list should be an Array.');\n\n        if (list.length === 0) {\n          return new Buffer(0);\n        } else if (list.length === 1) {\n          return list[0];\n        }\n\n        var i;\n        if (typeof totalLength !== 'number') {\n          totalLength = 0;\n          for (i = 0; i < list.length; i++) {\n            totalLength += list[i].length;\n          }\n        }\n\n        var buf = new Buffer(totalLength);\n        var pos = 0;\n        for (i = 0; i < list.length; i++) {\n          var item = list[i];\n          item.copy(buf, pos);\n          pos += item.length;\n        }\n        return buf;\n      };\n\n      // BUFFER INSTANCE METHODS\n      // =======================\n\n      function _hexWrite(buf, string, offset, length) {\n        offset = Number(offset) || 0;\n        var remaining = buf.length - offset;\n        if (!length) {\n          length = remaining;\n        } else {\n          length = Number(length);\n          if (length > remaining) {\n            length = remaining;\n          }\n        }\n\n        // must be an even number of digits\n        var strLen = string.length;\n        assert(strLen % 2 === 0, 'Invalid hex string');\n\n        if (length > strLen / 2) {\n          length = strLen / 2;\n        }\n        for (var i = 0; i < length; i++) {\n          var byte = parseInt(string.substr(i * 2, 2), 16);\n          assert(!isNaN(byte), 'Invalid hex string');\n          buf[offset + i] = byte;\n        }\n        Buffer._charsWritten = i * 2;\n        return i;\n      }\n\n      function _utf8Write(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(utf8ToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      function _asciiWrite(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(asciiToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      function _binaryWrite(buf, string, offset, length) {\n        return _asciiWrite(buf, string, offset, length);\n      }\n\n      function _base64Write(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(base64ToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      function _utf16leWrite(buf, string, offset, length) {\n        var charsWritten = Buffer._charsWritten =\n        blitBuffer(utf16leToBytes(string), buf, offset, length);\n        return charsWritten;\n      }\n\n      Buffer.prototype.write = function (string, offset, length, encoding) {\n        // Support both (string, offset, length, encoding)\n        // and the legacy (string, encoding, offset, length)\n        if (isFinite(offset)) {\n          if (!isFinite(length)) {\n            encoding = length;\n            length = undefined;\n          }\n        } else {// legacy\n          var swap = encoding;\n          encoding = offset;\n          offset = length;\n          length = swap;\n        }\n\n        offset = Number(offset) || 0;\n        var remaining = this.length - offset;\n        if (!length) {\n          length = remaining;\n        } else {\n          length = Number(length);\n          if (length > remaining) {\n            length = remaining;\n          }\n        }\n        encoding = String(encoding || 'utf8').toLowerCase();\n\n        var ret;\n        switch (encoding) {\n          case 'hex':\n            ret = _hexWrite(this, string, offset, length);\n            break;\n          case 'utf8':\n          case 'utf-8':\n            ret = _utf8Write(this, string, offset, length);\n            break;\n          case 'ascii':\n            ret = _asciiWrite(this, string, offset, length);\n            break;\n          case 'binary':\n            ret = _binaryWrite(this, string, offset, length);\n            break;\n          case 'base64':\n            ret = _base64Write(this, string, offset, length);\n            break;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            ret = _utf16leWrite(this, string, offset, length);\n            break;\n          default:\n            throw new Error('Unknown encoding');}\n\n        return ret;\n      };\n\n      Buffer.prototype.toString = function (encoding, start, end) {\n        var self = this;\n\n        encoding = String(encoding || 'utf8').toLowerCase();\n        start = Number(start) || 0;\n        end = end !== undefined ?\n        Number(end) :\n        end = self.length;\n\n        // Fastpath empty strings\n        if (end === start)\n        return '';\n\n        var ret;\n        switch (encoding) {\n          case 'hex':\n            ret = _hexSlice(self, start, end);\n            break;\n          case 'utf8':\n          case 'utf-8':\n            ret = _utf8Slice(self, start, end);\n            break;\n          case 'ascii':\n            ret = _asciiSlice(self, start, end);\n            break;\n          case 'binary':\n            ret = _binarySlice(self, start, end);\n            break;\n          case 'base64':\n            ret = _base64Slice(self, start, end);\n            break;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            ret = _utf16leSlice(self, start, end);\n            break;\n          default:\n            throw new Error('Unknown encoding');}\n\n        return ret;\n      };\n\n      Buffer.prototype.toJSON = function () {\n        return {\n          type: 'Buffer',\n          data: Array.prototype.slice.call(this._arr || this, 0) };\n\n      };\n\n      // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n      Buffer.prototype.copy = function (target, target_start, start, end) {\n        var source = this;\n\n        if (!start) start = 0;\n        if (!end && end !== 0) end = this.length;\n        if (!target_start) target_start = 0;\n\n        // Copy 0 bytes; we're done\n        if (end === start) return;\n        if (target.length === 0 || source.length === 0) return;\n\n        // Fatal error conditions\n        assert(end >= start, 'sourceEnd < sourceStart');\n        assert(target_start >= 0 && target_start < target.length,\n        'targetStart out of bounds');\n        assert(start >= 0 && start < source.length, 'sourceStart out of bounds');\n        assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds');\n\n        // Are we oob?\n        if (end > this.length)\n        end = this.length;\n        if (target.length - target_start < end - start)\n        end = target.length - target_start + start;\n\n        var len = end - start;\n\n        if (len < 100 || !Buffer._useTypedArrays) {\n          for (var i = 0; i < len; i++) {\n            target[i + target_start] = this[i + start];}\n        } else {\n          target._set(this.subarray(start, start + len), target_start);\n        }\n      };\n\n      function _base64Slice(buf, start, end) {\n        if (start === 0 && end === buf.length) {\n          return base64.fromByteArray(buf);\n        } else {\n          return base64.fromByteArray(buf.slice(start, end));\n        }\n      }\n\n      function _utf8Slice(buf, start, end) {\n        var res = '';\n        var tmp = '';\n        end = Math.min(buf.length, end);\n\n        for (var i = start; i < end; i++) {\n          if (buf[i] <= 0x7F) {\n            res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n            tmp = '';\n          } else {\n            tmp += '%' + buf[i].toString(16);\n          }\n        }\n\n        return res + decodeUtf8Char(tmp);\n      }\n\n      function _asciiSlice(buf, start, end) {\n        var ret = '';\n        end = Math.min(buf.length, end);\n\n        for (var i = start; i < end; i++) {\n          ret += String.fromCharCode(buf[i]);}\n        return ret;\n      }\n\n      function _binarySlice(buf, start, end) {\n        return _asciiSlice(buf, start, end);\n      }\n\n      function _hexSlice(buf, start, end) {\n        var len = buf.length;\n\n        if (!start || start < 0) start = 0;\n        if (!end || end < 0 || end > len) end = len;\n\n        var out = '';\n        for (var i = start; i < end; i++) {\n          out += toHex(buf[i]);\n        }\n        return out;\n      }\n\n      function _utf16leSlice(buf, start, end) {\n        var bytes = buf.slice(start, end);\n        var res = '';\n        for (var i = 0; i < bytes.length; i += 2) {\n          res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n        }\n        return res;\n      }\n\n      Buffer.prototype.slice = function (start, end) {\n        var len = this.length;\n        start = clamp(start, len, 0);\n        end = clamp(end, len, len);\n\n        if (Buffer._useTypedArrays) {\n          return Buffer._augment(this.subarray(start, end));\n        } else {\n          var sliceLen = end - start;\n          var newBuf = new Buffer(sliceLen, undefined, true);\n          for (var i = 0; i < sliceLen; i++) {\n            newBuf[i] = this[i + start];\n          }\n          return newBuf;\n        }\n      };\n\n      // `get` will be removed in Node 0.13+\n      Buffer.prototype.get = function (offset) {\n        console.log('.get() is deprecated. Access using array indexes instead.');\n        return this.readUInt8(offset);\n      };\n\n      // `set` will be removed in Node 0.13+\n      Buffer.prototype.set = function (v, offset) {\n        console.log('.set() is deprecated. Access using array indexes instead.');\n        return this.writeUInt8(v, offset);\n      };\n\n      Buffer.prototype.readUInt8 = function (offset, noAssert) {\n        if (!noAssert) {\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset < this.length, 'Trying to read beyond buffer length');\n        }\n\n        if (offset >= this.length)\n        return;\n\n        return this[offset];\n      };\n\n      function _readUInt16(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val;\n        if (littleEndian) {\n          val = buf[offset];\n          if (offset + 1 < len)\n          val |= buf[offset + 1] << 8;\n        } else {\n          val = buf[offset] << 8;\n          if (offset + 1 < len)\n          val |= buf[offset + 1];\n        }\n        return val;\n      }\n\n      Buffer.prototype.readUInt16LE = function (offset, noAssert) {\n        return _readUInt16(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readUInt16BE = function (offset, noAssert) {\n        return _readUInt16(this, offset, false, noAssert);\n      };\n\n      function _readUInt32(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val;\n        if (littleEndian) {\n          if (offset + 2 < len)\n          val = buf[offset + 2] << 16;\n          if (offset + 1 < len)\n          val |= buf[offset + 1] << 8;\n          val |= buf[offset];\n          if (offset + 3 < len)\n          val = val + (buf[offset + 3] << 24 >>> 0);\n        } else {\n          if (offset + 1 < len)\n          val = buf[offset + 1] << 16;\n          if (offset + 2 < len)\n          val |= buf[offset + 2] << 8;\n          if (offset + 3 < len)\n          val |= buf[offset + 3];\n          val = val + (buf[offset] << 24 >>> 0);\n        }\n        return val;\n      }\n\n      Buffer.prototype.readUInt32LE = function (offset, noAssert) {\n        return _readUInt32(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readUInt32BE = function (offset, noAssert) {\n        return _readUInt32(this, offset, false, noAssert);\n      };\n\n      Buffer.prototype.readInt8 = function (offset, noAssert) {\n        if (!noAssert) {\n          assert(offset !== undefined && offset !== null,\n          'missing offset');\n          assert(offset < this.length, 'Trying to read beyond buffer length');\n        }\n\n        if (offset >= this.length)\n        return;\n\n        var neg = this[offset] & 0x80;\n        if (neg)\n        return (0xff - this[offset] + 1) * -1;else\n\n        return this[offset];\n      };\n\n      function _readInt16(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val = _readUInt16(buf, offset, littleEndian, true);\n        var neg = val & 0x8000;\n        if (neg)\n        return (0xffff - val + 1) * -1;else\n\n        return val;\n      }\n\n      Buffer.prototype.readInt16LE = function (offset, noAssert) {\n        return _readInt16(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readInt16BE = function (offset, noAssert) {\n        return _readInt16(this, offset, false, noAssert);\n      };\n\n      function _readInt32(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        var val = _readUInt32(buf, offset, littleEndian, true);\n        var neg = val & 0x80000000;\n        if (neg)\n        return (0xffffffff - val + 1) * -1;else\n\n        return val;\n      }\n\n      Buffer.prototype.readInt32LE = function (offset, noAssert) {\n        return _readInt32(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readInt32BE = function (offset, noAssert) {\n        return _readInt32(this, offset, false, noAssert);\n      };\n\n      function _readFloat(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset + 3 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        return ieee754.read(buf, offset, littleEndian, 23, 4);\n      }\n\n      Buffer.prototype.readFloatLE = function (offset, noAssert) {\n        return _readFloat(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readFloatBE = function (offset, noAssert) {\n        return _readFloat(this, offset, false, noAssert);\n      };\n\n      function _readDouble(buf, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset + 7 < buf.length, 'Trying to read beyond buffer length');\n        }\n\n        return ieee754.read(buf, offset, littleEndian, 52, 8);\n      }\n\n      Buffer.prototype.readDoubleLE = function (offset, noAssert) {\n        return _readDouble(this, offset, true, noAssert);\n      };\n\n      Buffer.prototype.readDoubleBE = function (offset, noAssert) {\n        return _readDouble(this, offset, false, noAssert);\n      };\n\n      Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset < this.length, 'trying to write beyond buffer length');\n          verifuint(value, 0xff);\n        }\n\n        if (offset >= this.length) return;\n\n        this[offset] = value;\n      };\n\n      function _writeUInt16(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'trying to write beyond buffer length');\n          verifuint(value, 0xffff);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {\n          buf[offset + i] =\n          (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>>\n          (littleEndian ? i : 1 - i) * 8;\n        }\n      }\n\n      Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n        _writeUInt16(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n        _writeUInt16(this, value, offset, false, noAssert);\n      };\n\n      function _writeUInt32(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'trying to write beyond buffer length');\n          verifuint(value, 0xffffffff);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {\n          buf[offset + i] =\n          value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n        }\n      }\n\n      Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n        _writeUInt32(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n        _writeUInt32(this, value, offset, false, noAssert);\n      };\n\n      Buffer.prototype.writeInt8 = function (value, offset, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset < this.length, 'Trying to write beyond buffer length');\n          verifsint(value, 0x7f, -0x80);\n        }\n\n        if (offset >= this.length)\n        return;\n\n        if (value >= 0)\n        this.writeUInt8(value, offset, noAssert);else\n\n        this.writeUInt8(0xff + value + 1, offset, noAssert);\n      };\n\n      function _writeInt16(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 1 < buf.length, 'Trying to write beyond buffer length');\n          verifsint(value, 0x7fff, -0x8000);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        if (value >= 0)\n        _writeUInt16(buf, value, offset, littleEndian, noAssert);else\n\n        _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert);\n      }\n\n      Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n        _writeInt16(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n        _writeInt16(this, value, offset, false, noAssert);\n      };\n\n      function _writeInt32(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to write beyond buffer length');\n          verifsint(value, 0x7fffffff, -0x80000000);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        if (value >= 0)\n        _writeUInt32(buf, value, offset, littleEndian, noAssert);else\n\n        _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert);\n      }\n\n      Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n        _writeInt32(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n        _writeInt32(this, value, offset, false, noAssert);\n      };\n\n      function _writeFloat(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 3 < buf.length, 'Trying to write beyond buffer length');\n          verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      }\n\n      Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n        _writeFloat(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n        _writeFloat(this, value, offset, false, noAssert);\n      };\n\n      function _writeDouble(buf, value, offset, littleEndian, noAssert) {\n        if (!noAssert) {\n          assert(value !== undefined && value !== null, 'missing value');\n          assert(typeof littleEndian === 'boolean', 'missing or invalid endian');\n          assert(offset !== undefined && offset !== null, 'missing offset');\n          assert(offset + 7 < buf.length,\n          'Trying to write beyond buffer length');\n          verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308);\n        }\n\n        var len = buf.length;\n        if (offset >= len)\n        return;\n\n        ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      }\n\n      Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n        _writeDouble(this, value, offset, true, noAssert);\n      };\n\n      Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n        _writeDouble(this, value, offset, false, noAssert);\n      };\n\n      // fill(value, start=0, end=buffer.length)\n      Buffer.prototype.fill = function (value, start, end) {\n        if (!value) value = 0;\n        if (!start) start = 0;\n        if (!end) end = this.length;\n\n        if (typeof value === 'string') {\n          value = value.charCodeAt(0);\n        }\n\n        assert(typeof value === 'number' && !isNaN(value), 'value is not a number');\n        assert(end >= start, 'end < start');\n\n        // Fill 0 bytes; we're done\n        if (end === start) return;\n        if (this.length === 0) return;\n\n        assert(start >= 0 && start < this.length, 'start out of bounds');\n        assert(end >= 0 && end <= this.length, 'end out of bounds');\n\n        for (var i = start; i < end; i++) {\n          this[i] = value;\n        }\n      };\n\n      Buffer.prototype.inspect = function () {\n        var out = [];\n        var len = this.length;\n        for (var i = 0; i < len; i++) {\n          out[i] = toHex(this[i]);\n          if (i === exports.INSPECT_MAX_BYTES) {\n            out[i + 1] = '...';\n            break;\n          }\n        }\n        return '<Buffer ' + out.join(' ') + '>';\n      };\n\n      /**\n          * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n          * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n          */\n      Buffer.prototype.toArrayBuffer = function () {\n        if (typeof Uint8Array !== 'undefined') {\n          if (Buffer._useTypedArrays) {\n            return new Buffer(this).buffer;\n          } else {\n            var buf = new Uint8Array(this.length);\n            for (var i = 0, len = buf.length; i < len; i += 1) {\n              buf[i] = this[i];}\n            return buf.buffer;\n          }\n        } else {\n          throw new Error('Buffer.toArrayBuffer not supported in this browser');\n        }\n      };\n\n      // HELPER FUNCTIONS\n      // ================\n\n      function stringtrim(str) {\n        if (str.trim) return str.trim();\n        return str.replace(/^\\s+|\\s+$/g, '');\n      }\n\n      var BP = Buffer.prototype;\n\n      /**\n                                  * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n                                  */\n      Buffer._augment = function (arr) {\n        arr._isBuffer = true;\n\n        // save reference to original Uint8Array get/set methods before overwriting\n        arr._get = arr.get;\n        arr._set = arr.set;\n\n        // deprecated, will be removed in node 0.13+\n        arr.get = BP.get;\n        arr.set = BP.set;\n\n        arr.write = BP.write;\n        arr.toString = BP.toString;\n        arr.toLocaleString = BP.toString;\n        arr.toJSON = BP.toJSON;\n        arr.copy = BP.copy;\n        arr.slice = BP.slice;\n        arr.readUInt8 = BP.readUInt8;\n        arr.readUInt16LE = BP.readUInt16LE;\n        arr.readUInt16BE = BP.readUInt16BE;\n        arr.readUInt32LE = BP.readUInt32LE;\n        arr.readUInt32BE = BP.readUInt32BE;\n        arr.readInt8 = BP.readInt8;\n        arr.readInt16LE = BP.readInt16LE;\n        arr.readInt16BE = BP.readInt16BE;\n        arr.readInt32LE = BP.readInt32LE;\n        arr.readInt32BE = BP.readInt32BE;\n        arr.readFloatLE = BP.readFloatLE;\n        arr.readFloatBE = BP.readFloatBE;\n        arr.readDoubleLE = BP.readDoubleLE;\n        arr.readDoubleBE = BP.readDoubleBE;\n        arr.writeUInt8 = BP.writeUInt8;\n        arr.writeUInt16LE = BP.writeUInt16LE;\n        arr.writeUInt16BE = BP.writeUInt16BE;\n        arr.writeUInt32LE = BP.writeUInt32LE;\n        arr.writeUInt32BE = BP.writeUInt32BE;\n        arr.writeInt8 = BP.writeInt8;\n        arr.writeInt16LE = BP.writeInt16LE;\n        arr.writeInt16BE = BP.writeInt16BE;\n        arr.writeInt32LE = BP.writeInt32LE;\n        arr.writeInt32BE = BP.writeInt32BE;\n        arr.writeFloatLE = BP.writeFloatLE;\n        arr.writeFloatBE = BP.writeFloatBE;\n        arr.writeDoubleLE = BP.writeDoubleLE;\n        arr.writeDoubleBE = BP.writeDoubleBE;\n        arr.fill = BP.fill;\n        arr.inspect = BP.inspect;\n        arr.toArrayBuffer = BP.toArrayBuffer;\n\n        return arr;\n      };\n\n      // slice(start, end)\n      function clamp(index, len, defaultValue) {\n        if (typeof index !== 'number') return defaultValue;\n        index = ~~index; // Coerce to integer.\n        if (index >= len) return len;\n        if (index >= 0) return index;\n        index += len;\n        if (index >= 0) return index;\n        return 0;\n      }\n\n      function coerce(length) {\n        // Coerce length to a number (possibly NaN), round up\n        // in case it's fractional (e.g. 123.456) then do a\n        // double negate to coerce a NaN to 0. Easy, right?\n        length = ~~Math.ceil(+length);\n        return length < 0 ? 0 : length;\n      }\n\n      function isArray(subject) {\n        return (Array.isArray || function (subject) {\n          return Object.prototype.toString.call(subject) === '[object Array]';\n        })(subject);\n      }\n\n      function isArrayish(subject) {\n        return isArray(subject) || Buffer.isBuffer(subject) ||\n        subject && (typeof subject === \"undefined\" ? \"undefined\" : _typeof(subject)) === 'object' &&\n        typeof subject.length === 'number';\n      }\n\n      function toHex(n) {\n        if (n < 16) return '0' + n.toString(16);\n        return n.toString(16);\n      }\n\n      function utf8ToBytes(str) {\n        var byteArray = [];\n        for (var i = 0; i < str.length; i++) {\n          var b = str.charCodeAt(i);\n          if (b <= 0x7F)\n          byteArray.push(str.charCodeAt(i));else\n          {\n            var start = i;\n            if (b >= 0xD800 && b <= 0xDFFF) i++;\n            var h = encodeURIComponent(str.slice(start, i + 1)).substr(1).split('%');\n            for (var j = 0; j < h.length; j++) {\n              byteArray.push(parseInt(h[j], 16));}\n          }\n        }\n        return byteArray;\n      }\n\n      function asciiToBytes(str) {\n        var byteArray = [];\n        for (var i = 0; i < str.length; i++) {\n          // Node's code seems to be doing this and not & 0x7F..\n          byteArray.push(str.charCodeAt(i) & 0xFF);\n        }\n        return byteArray;\n      }\n\n      function utf16leToBytes(str) {\n        var c, hi, lo;\n        var byteArray = [];\n        for (var i = 0; i < str.length; i++) {\n          c = str.charCodeAt(i);\n          hi = c >> 8;\n          lo = c % 256;\n          byteArray.push(lo);\n          byteArray.push(hi);\n        }\n\n        return byteArray;\n      }\n\n      function base64ToBytes(str) {\n        return base64.toByteArray(str);\n      }\n\n      function blitBuffer(src, dst, offset, length) {\n        var pos;\n        for (var i = 0; i < length; i++) {\n          if (i + offset >= dst.length || i >= src.length)\n          break;\n          dst[i + offset] = src[i];\n        }\n        return i;\n      }\n\n      function decodeUtf8Char(str) {\n        try {\n          return decodeURIComponent(str);\n        } catch (err) {\n          return String.fromCharCode(0xFFFD); // UTF 8 invalid char\n        }\n      }\n\n      /*\n         * We have to make sure that the value is a valid integer. This means that it\n         * is non-negative. It has no fractional component and that it does not\n         * exceed the maximum allowed value.\n         */\n      function verifuint(value, max) {\n        assert(typeof value === 'number', 'cannot write a non-number as a number');\n        assert(value >= 0, 'specified a negative value for writing an unsigned value');\n        assert(value <= max, 'value is larger than maximum value for type');\n        assert(Math.floor(value) === value, 'value has a fractional component');\n      }\n\n      function verifsint(value, max, min) {\n        assert(typeof value === 'number', 'cannot write a non-number as a number');\n        assert(value <= max, 'value larger than maximum allowed value');\n        assert(value >= min, 'value smaller than minimum allowed value');\n        assert(Math.floor(value) === value, 'value has a fractional component');\n      }\n\n      function verifIEEE754(value, max, min) {\n        assert(typeof value === 'number', 'cannot write a non-number as a number');\n        assert(value <= max, 'value larger than maximum allowed value');\n        assert(value >= min, 'value smaller than minimum allowed value');\n      }\n\n      function assert(test, message) {\n        if (!test) throw new Error(message || 'Failed assertion');\n      }\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/gulp-browserify/node_modules/buffer/index.js\", \"/../../node_modules/gulp-browserify/node_modules/buffer\");\n  }, { \"b55mWE\": 5, \"base64-js\": 3, \"buffer\": 4, \"ieee754\": 6 }], 5: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      // shim for using process in browser\n\n      var process = module.exports = {};\n\n      process.nextTick = function () {\n        var canSetImmediate = typeof window !== 'undefined' &&\n        window.setImmediate;\n        var canPost = typeof window !== 'undefined' &&\n        window.postMessage && window.addEventListener;\n\n\n        if (canSetImmediate) {\n          return function (f) {return window.setImmediate(f);};\n        }\n\n        if (canPost) {\n          var queue = [];\n          window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n              ev.stopPropagation();\n              if (queue.length > 0) {\n                var fn = queue.shift();\n                fn();\n              }\n            }\n          }, true);\n\n          return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n          };\n        }\n\n        return function nextTick(fn) {\n          setTimeout(fn, 0);\n        };\n      }();\n\n      process.title = 'browser';\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n\n      function noop() {}\n\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n\n      process.binding = function (name) {\n        throw new Error('process.binding is not supported');\n      };\n\n      // TODO(shtylman)\n      process.cwd = function () {return '/';};\n      process.chdir = function (dir) {\n        throw new Error('process.chdir is not supported');\n      };\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/gulp-browserify/node_modules/process/browser.js\", \"/../../node_modules/gulp-browserify/node_modules/process\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }], 6: [function (require, module, exports) {\n    (function (process, global, Buffer, __argument0, __argument1, __argument2, __argument3, __filename, __dirname) {\n      exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n        var e, m;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var nBits = -7;\n        var i = isLE ? nBytes - 1 : 0;\n        var d = isLE ? -1 : 1;\n        var s = buffer[offset + i];\n\n        i += d;\n\n        e = s & (1 << -nBits) - 1;\n        s >>= -nBits;\n        nBits += eLen;\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n        m = e & (1 << -nBits) - 1;\n        e >>= -nBits;\n        nBits += mLen;\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n        if (e === 0) {\n          e = 1 - eBias;\n        } else if (e === eMax) {\n          return m ? NaN : (s ? -1 : 1) * Infinity;\n        } else {\n          m = m + Math.pow(2, mLen);\n          e = e - eBias;\n        }\n        return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n      };\n\n      exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n        var e, m, c;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n        var i = isLE ? 0 : nBytes - 1;\n        var d = isLE ? 1 : -1;\n        var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\n        value = Math.abs(value);\n\n        if (isNaN(value) || value === Infinity) {\n          m = isNaN(value) ? 1 : 0;\n          e = eMax;\n        } else {\n          e = Math.floor(Math.log(value) / Math.LN2);\n          if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n          }\n          if (e + eBias >= 1) {\n            value += rt / c;\n          } else {\n            value += rt * Math.pow(2, 1 - eBias);\n          }\n          if (value * c >= 2) {\n            e++;\n            c /= 2;\n          }\n\n          if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n          } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n          } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n          }\n        }\n\n        for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n        e = e << mLen | m;\n        eLen += mLen;\n        for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n        buffer[offset + i - d] |= s * 128;\n      };\n\n    }).call(this, require(\"b55mWE\"), typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}, require(\"buffer\").Buffer, arguments[3], arguments[4], arguments[5], arguments[6], \"/../../node_modules/ieee754/index.js\", \"/../../node_modules/ieee754\");\n  }, { \"b55mWE\": 5, \"buffer\": 4 }] }, {}, [2]);\n//# sourceMappingURL=data:application/json;base64,\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nclass PosterDevice {\n\n  constructor() {\n    this.device = null;\n    this.onDisconnected = this.onDisconnected.bind(this);\n  }\n\n  request() {\n    console.log('request');\n    let options = {\n      filters: [{\n        name: 'test'\n      }]\n    };\n    return navigator.bluetooth.requestDevice(options)\n    .then(device => {\n      this.device = device;\n      this.device.addEventListener('gattserverdisconnected', this.onDisconnected);\n      return device;\n    });\n  }\n\n  connect() {\n    console.log('connect');\n    if (this.device) {\n      return this.device.gatt.connect();\n    }\n    return Promise.reject('Device is not connected.');\n  }\n\n  writeColor(data) {\n    console.log('writeColor');\n    return this.device.gatt.getPrimaryService(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0)\n    .then(service => service.getCharacteristic(0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4))\n    .then(characteristic => characteristic.writeValue(data));\n  }\n\n  disconnect() {\n    console.log('disconnect');\n    if (this.device) {\n      return this.device.gatt.disconnect();\n    }\n    return Promise.reject('Device is not connected.');\n  }\n\n  onDisconnected() {\n    console.log('onDisconnected');\n    console.log('Device is disconnected.');\n  }\n}\n\nconst posterDevice = new PosterDevice();\nmodule.exports = posterDevice;\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/app/device.js\",\"/app\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n// const BluetoothDevice = require('web-bluetooth');\n// const stateManager = require('./app/state.js');\nconst posterDevice = require('./app/device.js');\n\n// const service = '1ecce4f2-7f9e-11e6-ae22-56b6b6499611';\nconst characteristic = '488d7950-7f9e-11e6-ae22-56b6b6499611';\n\n// const filter = {\n//   name: 'MyDevice',\n//   service: [service]\n// };\nlet blue;\n\nconst connectButton = document.getElementById('js-connect');\n// const disconnectButton = document.getElementById('js-disconnect');\n\nconst okButton = document.getElementById('js-ok');\n\n// connectButton.addEventListener('click', () => {\n//   connectButton.disabled = true;\n//   stateManager.change('connecting');\n//\n//   blue = new BluetoothDevice(filter);\n//   blue.connect()\n//     .then(device => {\n//       console.log(device);\n//       stateManager.change('connected');\n//       connectButton.disabled = false;\n//     })\n//     .catch(error => {\n//       console.log(error);\n//       stateManager.change('init');\n//       connectButton.disabled = false;\n//     });\n// });\n//\n// disconnectButton.addEventListener('click', () => {\n//   if (blue.disconnect()) {\n//     stateManager.change('init');\n//   } else {\n//     console.log('error while disconnect');\n//   }\n// });\n\nconnectButton.addEventListener('click', () => {\n  posterDevice.request()\n  .then(() => posterDevice.connect())\n  .then(() => {\n    posterDevice.writeColor('001122');\n  })\n  .catch(error => {\n    console.log(error);\n  });\n});\n// connectButton.addEventListener('click', () => {\n//   console.log('Requesting Bluetooth Device...');\n//   navigator.bluetooth.requestDevice({\n//     filters: [{services: [service]}]\n//   })\n//   .then(device => {\n//     console.log('Connecting to GATT Server...');\n//     return device.gatt.connect();\n//   })\n//   .then(server => {\n//     console.log('Getting Service...');\n//     return server.getPrimaryService(service);\n//   })\n//   .then(service => {\n//     console.log('Getting Characteristics...');\n//     // if (characteristic) {\n//     //   // Get all characteristics that match this UUID.\n//     //   return service.getCharacteristics(characteristic);\n//     // }\n//     // Get all characteristics.\n//     return service.getCharacteristic(characteristic);\n//     // return service.getCharacteristics();\n//   })\n//   .then(characteristics => {\n//     // console.log('> Characteristics: ' +\n//     //   characteristics.map(c => c.uuid).join('\\n' + ' '.repeat(19)));\n//\n//     return characteristics[0].readValue();\n//   })\n//   .then(value => {\n//     console.log('Battery percentage is ' + value.getUint8(0));\n//   })\n//   .catch(error => {\n//     console.log('Argh! ' + error);\n//   });\n// });\n\nokButton.addEventListener('click', () => {\n  console.log('read: ' + characteristic);\n  blue.getValue(characteristic)\n    .then(value => {\n      console.log(value);\n    });\n  // console.log('write: 026683da-7f8b-11e6-ae22-56b6b6499611');\n  // blue.writeValue('026683da-7f8b-11e6-ae22-56b6b6499611', 'ok')\n  //   .then(writeSuccess => {\n  //     console.log(writeSuccess);\n  //   })\n  //   .catch(error => {\n  //     console.log(error);\n  //   });\n});\n\nconsole.log('3');\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_e5f40b29.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/../../node_modules/gulp-browserify/node_modules/base64-js/lib\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = Buffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192\n\n/**\n * If `Buffer._useTypedArrays`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (compatible down to IE6)\n */\nBuffer._useTypedArrays = (function () {\n  // Detect if browser supports Typed Arrays. Supported browsers are IE 10+, Firefox 4+,\n  // Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+. If the browser does not support adding\n  // properties to `Uint8Array` instances, then that's the same as no `Uint8Array` support\n  // because we need to be able to add all the node Buffer API methods. This is an issue\n  // in Firefox 4-29. Now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() &&\n        typeof arr.subarray === 'function' // Chrome 9-10 lack `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Workaround: node's base64 implementation allows for non-padded strings\n  // while base64-js does not.\n  if (encoding === 'base64' && type === 'string') {\n    subject = stringtrim(subject)\n    while (subject.length % 4 !== 0) {\n      subject = subject + '='\n    }\n  }\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = coerce(subject)\n  else if (type === 'string')\n    length = Buffer.byteLength(subject, encoding)\n  else if (type === 'object')\n    length = coerce(subject.length) // assume that object is array-like\n  else\n    throw new Error('First argument needs to be a number, array or string.')\n\n  var buf\n  if (Buffer._useTypedArrays) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer._useTypedArrays && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    for (i = 0; i < length; i++) {\n      if (Buffer.isBuffer(subject))\n        buf[i] = subject.readUInt8(i)\n      else\n        buf[i] = subject[i]\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\n// STATIC METHODS\n// ==============\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b !== null && b !== undefined && b._isBuffer)\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'hex':\n      ret = str.length / 2\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.concat = function (list, totalLength) {\n  assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\\n' +\n      'list should be an Array.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (typeof totalLength !== 'number') {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\n// BUFFER INSTANCE METHODS\n// =======================\n\nfunction _hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  assert(strLen % 2 === 0, 'Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    assert(!isNaN(byte), 'Invalid hex string')\n    buf[offset + i] = byte\n  }\n  Buffer._charsWritten = i * 2\n  return i\n}\n\nfunction _utf8Write (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(utf8ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _asciiWrite (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _binaryWrite (buf, string, offset, length) {\n  return _asciiWrite(buf, string, offset, length)\n}\n\nfunction _base64Write (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _utf16leWrite (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(utf16leToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = _hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = _utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = _asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = _binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = _base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = _utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.prototype.toString = function (encoding, start, end) {\n  var self = this\n\n  encoding = String(encoding || 'utf8').toLowerCase()\n  start = Number(start) || 0\n  end = (end !== undefined)\n    ? Number(end)\n    : end = self.length\n\n  // Fastpath empty strings\n  if (end === start)\n    return ''\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = _hexSlice(self, start, end)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = _utf8Slice(self, start, end)\n      break\n    case 'ascii':\n      ret = _asciiSlice(self, start, end)\n      break\n    case 'binary':\n      ret = _binarySlice(self, start, end)\n      break\n    case 'base64':\n      ret = _base64Slice(self, start, end)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = _utf16leSlice(self, start, end)\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (!target_start) target_start = 0\n\n  // Copy 0 bytes; we're done\n  if (end === start) return\n  if (target.length === 0 || source.length === 0) return\n\n  // Fatal error conditions\n  assert(end >= start, 'sourceEnd < sourceStart')\n  assert(target_start >= 0 && target_start < target.length,\n      'targetStart out of bounds')\n  assert(start >= 0 && start < source.length, 'sourceStart out of bounds')\n  assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 100 || !Buffer._useTypedArrays) {\n    for (var i = 0; i < len; i++)\n      target[i + target_start] = this[i + start]\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n}\n\nfunction _base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction _utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction _asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++)\n    ret += String.fromCharCode(buf[i])\n  return ret\n}\n\nfunction _binarySlice (buf, start, end) {\n  return _asciiSlice(buf, start, end)\n}\n\nfunction _hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction _utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i+1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = clamp(start, len, 0)\n  end = clamp(end, len, len)\n\n  if (Buffer._useTypedArrays) {\n    return Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    var newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n    return newBuf\n  }\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert) {\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'Trying to read beyond buffer length')\n  }\n\n  if (offset >= this.length)\n    return\n\n  return this[offset]\n}\n\nfunction _readUInt16 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val\n  if (littleEndian) {\n    val = buf[offset]\n    if (offset + 1 < len)\n      val |= buf[offset + 1] << 8\n  } else {\n    val = buf[offset] << 8\n    if (offset + 1 < len)\n      val |= buf[offset + 1]\n  }\n  return val\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  return _readUInt16(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  return _readUInt16(this, offset, false, noAssert)\n}\n\nfunction _readUInt32 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val\n  if (littleEndian) {\n    if (offset + 2 < len)\n      val = buf[offset + 2] << 16\n    if (offset + 1 < len)\n      val |= buf[offset + 1] << 8\n    val |= buf[offset]\n    if (offset + 3 < len)\n      val = val + (buf[offset + 3] << 24 >>> 0)\n  } else {\n    if (offset + 1 < len)\n      val = buf[offset + 1] << 16\n    if (offset + 2 < len)\n      val |= buf[offset + 2] << 8\n    if (offset + 3 < len)\n      val |= buf[offset + 3]\n    val = val + (buf[offset] << 24 >>> 0)\n  }\n  return val\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  return _readUInt32(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  return _readUInt32(this, offset, false, noAssert)\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert) {\n    assert(offset !== undefined && offset !== null,\n        'missing offset')\n    assert(offset < this.length, 'Trying to read beyond buffer length')\n  }\n\n  if (offset >= this.length)\n    return\n\n  var neg = this[offset] & 0x80\n  if (neg)\n    return (0xff - this[offset] + 1) * -1\n  else\n    return this[offset]\n}\n\nfunction _readInt16 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val = _readUInt16(buf, offset, littleEndian, true)\n  var neg = val & 0x8000\n  if (neg)\n    return (0xffff - val + 1) * -1\n  else\n    return val\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  return _readInt16(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  return _readInt16(this, offset, false, noAssert)\n}\n\nfunction _readInt32 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val = _readUInt32(buf, offset, littleEndian, true)\n  var neg = val & 0x80000000\n  if (neg)\n    return (0xffffffff - val + 1) * -1\n  else\n    return val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  return _readInt32(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  return _readInt32(this, offset, false, noAssert)\n}\n\nfunction _readFloat (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  return ieee754.read(buf, offset, littleEndian, 23, 4)\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  return _readFloat(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  return _readFloat(this, offset, false, noAssert)\n}\n\nfunction _readDouble (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset + 7 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  return ieee754.read(buf, offset, littleEndian, 52, 8)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  return _readDouble(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  return _readDouble(this, offset, false, noAssert)\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xff)\n  }\n\n  if (offset >= this.length) return\n\n  this[offset] = value\n}\n\nfunction _writeUInt16 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xffff)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {\n    buf[offset + i] =\n        (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n            (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  _writeUInt16(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  _writeUInt16(this, value, offset, false, noAssert)\n}\n\nfunction _writeUInt32 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xffffffff)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {\n    buf[offset + i] =\n        (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  _writeUInt32(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  _writeUInt32(this, value, offset, false, noAssert)\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7f, -0x80)\n  }\n\n  if (offset >= this.length)\n    return\n\n  if (value >= 0)\n    this.writeUInt8(value, offset, noAssert)\n  else\n    this.writeUInt8(0xff + value + 1, offset, noAssert)\n}\n\nfunction _writeInt16 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7fff, -0x8000)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  if (value >= 0)\n    _writeUInt16(buf, value, offset, littleEndian, noAssert)\n  else\n    _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert)\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  _writeInt16(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  _writeInt16(this, value, offset, false, noAssert)\n}\n\nfunction _writeInt32 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7fffffff, -0x80000000)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  if (value >= 0)\n    _writeUInt32(buf, value, offset, littleEndian, noAssert)\n  else\n    _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert)\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  _writeInt32(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  _writeInt32(this, value, offset, false, noAssert)\n}\n\nfunction _writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')\n    verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  _writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  _writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction _writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 7 < buf.length,\n        'Trying to write beyond buffer length')\n    verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  _writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  _writeDouble(this, value, offset, false, noAssert)\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (typeof value === 'string') {\n    value = value.charCodeAt(0)\n  }\n\n  assert(typeof value === 'number' && !isNaN(value), 'value is not a number')\n  assert(end >= start, 'end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  assert(start >= 0 && start < this.length, 'start out of bounds')\n  assert(end >= 0 && end <= this.length, 'end out of bounds')\n\n  for (var i = start; i < end; i++) {\n    this[i] = value\n  }\n}\n\nBuffer.prototype.inspect = function () {\n  var out = []\n  var len = this.length\n  for (var i = 0; i < len; i++) {\n    out[i] = toHex(this[i])\n    if (i === exports.INSPECT_MAX_BYTES) {\n      out[i + 1] = '...'\n      break\n    }\n  }\n  return '<Buffer ' + out.join(' ') + '>'\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer._useTypedArrays) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1)\n        buf[i] = this[i]\n      return buf.buffer\n    }\n  } else {\n    throw new Error('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\n// slice(start, end)\nfunction clamp (index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue\n  index = ~~index;  // Coerce to integer.\n  if (index >= len) return len\n  if (index >= 0) return index\n  index += len\n  if (index >= 0) return index\n  return 0\n}\n\nfunction coerce (length) {\n  // Coerce length to a number (possibly NaN), round up\n  // in case it's fractional (e.g. 123.456) then do a\n  // double negate to coerce a NaN to 0. Easy, right?\n  length = ~~Math.ceil(+length)\n  return length < 0 ? 0 : length\n}\n\nfunction isArray (subject) {\n  return (Array.isArray || function (subject) {\n    return Object.prototype.toString.call(subject) === '[object Array]'\n  })(subject)\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    var b = str.charCodeAt(i)\n    if (b <= 0x7F)\n      byteArray.push(str.charCodeAt(i))\n    else {\n      var start = i\n      if (b >= 0xD800 && b <= 0xDFFF) i++\n      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')\n      for (var j = 0; j < h.length; j++)\n        byteArray.push(parseInt(h[j], 16))\n    }\n  }\n  return byteArray\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(str)\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  var pos\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n/*\n * We have to make sure that the value is a valid integer. This means that it\n * is non-negative. It has no fractional component and that it does not\n * exceed the maximum allowed value.\n */\nfunction verifuint (value, max) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value >= 0, 'specified a negative value for writing an unsigned value')\n  assert(value <= max, 'value is larger than maximum value for type')\n  assert(Math.floor(value) === value, 'value has a fractional component')\n}\n\nfunction verifsint (value, max, min) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value <= max, 'value larger than maximum allowed value')\n  assert(value >= min, 'value smaller than minimum allowed value')\n  assert(Math.floor(value) === value, 'value has a fractional component')\n}\n\nfunction verifIEEE754 (value, max, min) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value <= max, 'value larger than maximum allowed value')\n  assert(value >= min, 'value smaller than minimum allowed value')\n}\n\nfunction assert (test, message) {\n  if (!test) throw new Error(message || 'Failed assertion')\n}\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/../../node_modules/gulp-browserify/node_modules/buffer\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/gulp-browserify/node_modules/process/browser.js\",\"/../../node_modules/gulp-browserify/node_modules/process\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n}).call(this,require(\"b55mWE\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../../node_modules/ieee754/index.js\",\"/../../node_modules/ieee754\")","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})"],"sourceRoot":"/source/"}